/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.2-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultibranchPipeline model module.
 * @module model/MultibranchPipeline
 * @version 1.1.2-pre.0
 */
class MultibranchPipeline {
    /**
     * @member {String} displayName
     * @type {String}
     */
    displayName;
    /**
     * @member {Number} estimatedDurationInMillis
     * @type {Number}
     */
    estimatedDurationInMillis;
    /**
     * @member {String} latestRun
     * @type {String}
     */
    latestRun;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {String} organization
     * @type {String}
     */
    organization;
    /**
     * @member {Number} weatherScore
     * @type {Number}
     */
    weatherScore;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='branchNames', complexType='null', getter='getBranchNames', setter='setBranchNames', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='branchNames', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['branchNames'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='BranchNames', nameInSnakeCase='BRANCH_NAMES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false}>} branchNames
     * @type {Array.<CodegenProperty{openApiType='string', baseName='branchNames', complexType='null', getter='getBranchNames', setter='setBranchNames', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='branchNames', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['branchNames'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='BranchNames', nameInSnakeCase='BRANCH_NAMES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false}>}
     */
    branchNames;
    /**
     * @member {Number} numberOfFailingBranches
     * @type {Number}
     */
    numberOfFailingBranches;
    /**
     * @member {Number} numberOfFailingPullRequests
     * @type {Number}
     */
    numberOfFailingPullRequests;
    /**
     * @member {Number} numberOfSuccessfulBranches
     * @type {Number}
     */
    numberOfSuccessfulBranches;
    /**
     * @member {Number} numberOfSuccessfulPullRequests
     * @type {Number}
     */
    numberOfSuccessfulPullRequests;
    /**
     * @member {Number} totalNumberOfBranches
     * @type {Number}
     */
    totalNumberOfBranches;
    /**
     * @member {Number} totalNumberOfPullRequests
     * @type {Number}
     */
    totalNumberOfPullRequests;
    /**
     * @member {String} _class
     * @type {String}
     */
    _class;

    

    /**
     * Constructs a new <code>MultibranchPipeline</code>.
     * @alias module:model/MultibranchPipeline
     */
    constructor() { 
        
        MultibranchPipeline.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultibranchPipeline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultibranchPipeline} obj Optional instance to populate.
     * @return {module:model/MultibranchPipeline} The populated <code>MultibranchPipeline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultibranchPipeline();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('estimatedDurationInMillis')) {
                obj['estimatedDurationInMillis'] = ApiClient.convertToType(data['estimatedDurationInMillis'], 'Number');
            }
            if (data.hasOwnProperty('latestRun')) {
                obj['latestRun'] = ApiClient.convertToType(data['latestRun'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('weatherScore')) {
                obj['weatherScore'] = ApiClient.convertToType(data['weatherScore'], 'Number');
            }
            if (data.hasOwnProperty('branchNames')) {
                obj['branchNames'] = ApiClient.convertToType(data['branchNames'], ['String']);
            }
            if (data.hasOwnProperty('numberOfFailingBranches')) {
                obj['numberOfFailingBranches'] = ApiClient.convertToType(data['numberOfFailingBranches'], 'Number');
            }
            if (data.hasOwnProperty('numberOfFailingPullRequests')) {
                obj['numberOfFailingPullRequests'] = ApiClient.convertToType(data['numberOfFailingPullRequests'], 'Number');
            }
            if (data.hasOwnProperty('numberOfSuccessfulBranches')) {
                obj['numberOfSuccessfulBranches'] = ApiClient.convertToType(data['numberOfSuccessfulBranches'], 'Number');
            }
            if (data.hasOwnProperty('numberOfSuccessfulPullRequests')) {
                obj['numberOfSuccessfulPullRequests'] = ApiClient.convertToType(data['numberOfSuccessfulPullRequests'], 'Number');
            }
            if (data.hasOwnProperty('totalNumberOfBranches')) {
                obj['totalNumberOfBranches'] = ApiClient.convertToType(data['totalNumberOfBranches'], 'Number');
            }
            if (data.hasOwnProperty('totalNumberOfPullRequests')) {
                obj['totalNumberOfPullRequests'] = ApiClient.convertToType(data['totalNumberOfPullRequests'], 'Number');
            }
            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
        }
        return obj;
    }
}



export default MultibranchPipeline;

