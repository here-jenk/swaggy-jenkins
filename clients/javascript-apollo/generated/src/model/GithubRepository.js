/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.5.1-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GithubRepositorylinks from './GithubRepositorylinks';
import GithubRepositorypermissions from './GithubRepositorypermissions';

/**
 * The GithubRepository model module.
 * @module model/GithubRepository
 * @version 1.5.1-pre.0
 */
class GithubRepository {
    /**
     * @member {String} _class
     * @type {String}
     */
    _class;
    /**
     * @member {GithubRepositorylinks} _links
     * @type {GithubRepositorylinks}
     */
    _links;
    /**
     * @member {String} defaultBranch
     * @type {String}
     */
    defaultBranch;
    /**
     * @member {String} description
     * @type {String}
     */
    description;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {GithubRepositorypermissions} permissions
     * @type {GithubRepositorypermissions}
     */
    permissions;
    /**
     * @member {Boolean} private
     * @type {Boolean}
     */
    private;
    /**
     * @member {String} fullName
     * @type {String}
     */
    fullName;

    

    /**
     * Constructs a new <code>GithubRepository</code>.
     * @alias module:model/GithubRepository
     */
    constructor() { 
        
        GithubRepository.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GithubRepository</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GithubRepository} obj Optional instance to populate.
     * @return {module:model/GithubRepository} The populated <code>GithubRepository</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GithubRepository();

            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = GithubRepositorylinks.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('defaultBranch')) {
                obj['defaultBranch'] = ApiClient.convertToType(data['defaultBranch'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = GithubRepositorypermissions.constructFromObject(data['permissions']);
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
            }
            if (data.hasOwnProperty('fullName')) {
                obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
            }
        }
        return obj;
    }
}



export default GithubRepository;

