/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.5.1-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GithubContent model module.
 * @module model/GithubContent
 * @version 1.5.1-pre.0
 */
class GithubContent {
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {String} sha
     * @type {String}
     */
    sha;
    /**
     * @member {String} _class
     * @type {String}
     */
    _class;
    /**
     * @member {String} repo
     * @type {String}
     */
    repo;
    /**
     * @member {Number} size
     * @type {Number}
     */
    size;
    /**
     * @member {String} owner
     * @type {String}
     */
    owner;
    /**
     * @member {String} path
     * @type {String}
     */
    path;
    /**
     * @member {String} base64Data
     * @type {String}
     */
    base64Data;

    

    /**
     * Constructs a new <code>GithubContent</code>.
     * @alias module:model/GithubContent
     */
    constructor() { 
        
        GithubContent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GithubContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GithubContent} obj Optional instance to populate.
     * @return {module:model/GithubContent} The populated <code>GithubContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GithubContent();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sha')) {
                obj['sha'] = ApiClient.convertToType(data['sha'], 'String');
            }
            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
            if (data.hasOwnProperty('repo')) {
                obj['repo'] = ApiClient.convertToType(data['repo'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('base64Data')) {
                obj['base64Data'] = ApiClient.convertToType(data['base64Data'], 'String');
            }
        }
        return obj;
    }
}



export default GithubContent;

