<?php
/**
 * HudsonMasterComputer
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.2-pre.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the HudsonMasterComputer model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class HudsonMasterComputer 
{
        /**
     * @var string|null
     * @SerializedName("_class")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $class;

    /**
     * @var string|null
     * @SerializedName("displayName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $displayName;

    /**
     * @var OpenAPI\Server\Model\HudsonMasterComputerexecutors[]|null
     * @SerializedName("executors")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\HudsonMasterComputerexecutors")
     * })
     * @Type("array<OpenAPI\Server\Model\HudsonMasterComputerexecutors>")
     */
    protected $executors;

    /**
     * @var string|null
     * @SerializedName("icon")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $icon;

    /**
     * @var string|null
     * @SerializedName("iconClassName")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $iconClassName;

    /**
     * @var bool|null
     * @SerializedName("idle")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $idle;

    /**
     * @var bool|null
     * @SerializedName("jnlpAgent")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $jnlpAgent;

    /**
     * @var bool|null
     * @SerializedName("launchSupported")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $launchSupported;

    /**
     * @var OpenAPI\Server\Model\Label1|null
     * @SerializedName("loadStatistics")
     * @Assert\Type("OpenAPI\Server\Model\Label1")
     * @Type("OpenAPI\Server\Model\Label1")
     */
    protected $loadStatistics;

    /**
     * @var bool|null
     * @SerializedName("manualLaunchAllowed")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $manualLaunchAllowed;

    /**
     * @var OpenAPI\Server\Model\HudsonMasterComputermonitorData|null
     * @SerializedName("monitorData")
     * @Assert\Type("OpenAPI\Server\Model\HudsonMasterComputermonitorData")
     * @Type("OpenAPI\Server\Model\HudsonMasterComputermonitorData")
     */
    protected $monitorData;

    /**
     * @var int|null
     * @SerializedName("numExecutors")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $numExecutors;

    /**
     * @var bool|null
     * @SerializedName("offline")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $offline;

    /**
     * @var string|null
     * @SerializedName("offlineCause")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $offlineCause;

    /**
     * @var string|null
     * @SerializedName("offlineCauseReason")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $offlineCauseReason;

    /**
     * @var bool|null
     * @SerializedName("temporarilyOffline")
     * @Assert\Type("bool")
     * @Type("bool")
     */
    protected $temporarilyOffline;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->class = isset($data['class']) ? $data['class'] : null;
        $this->displayName = isset($data['displayName']) ? $data['displayName'] : null;
        $this->executors = isset($data['executors']) ? $data['executors'] : null;
        $this->icon = isset($data['icon']) ? $data['icon'] : null;
        $this->iconClassName = isset($data['iconClassName']) ? $data['iconClassName'] : null;
        $this->idle = isset($data['idle']) ? $data['idle'] : null;
        $this->jnlpAgent = isset($data['jnlpAgent']) ? $data['jnlpAgent'] : null;
        $this->launchSupported = isset($data['launchSupported']) ? $data['launchSupported'] : null;
        $this->loadStatistics = isset($data['loadStatistics']) ? $data['loadStatistics'] : null;
        $this->manualLaunchAllowed = isset($data['manualLaunchAllowed']) ? $data['manualLaunchAllowed'] : null;
        $this->monitorData = isset($data['monitorData']) ? $data['monitorData'] : null;
        $this->numExecutors = isset($data['numExecutors']) ? $data['numExecutors'] : null;
        $this->offline = isset($data['offline']) ? $data['offline'] : null;
        $this->offlineCause = isset($data['offlineCause']) ? $data['offlineCause'] : null;
        $this->offlineCauseReason = isset($data['offlineCauseReason']) ? $data['offlineCauseReason'] : null;
        $this->temporarilyOffline = isset($data['temporarilyOffline']) ? $data['temporarilyOffline'] : null;
    }

    /**
     * Gets class.
     *
     * @return string|null
     */
    public function getClass()
    {
        return $this->class;
    }

    /**
     * Sets class.
     *
     * @param string|null $class
     *
     * @return $this
     */
    public function setClass($class = null)
    {
        $this->class = $class;

        return $this;
    }

    /**
     * Gets displayName.
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->displayName;
    }

    /**
     * Sets displayName.
     *
     * @param string|null $displayName
     *
     * @return $this
     */
    public function setDisplayName($displayName = null)
    {
        $this->displayName = $displayName;

        return $this;
    }

    /**
     * Gets executors.
     *
     * @return OpenAPI\Server\Model\HudsonMasterComputerexecutors[]|null
     */
    public function getExecutors(): ?array
    {
        return $this->executors;
    }

    /**
     * Sets executors.
     *
     * @param OpenAPI\Server\Model\HudsonMasterComputerexecutors[]|null $executors
     *
     * @return $this
     */
    public function setExecutors(array $executors = null)
    {
        $this->executors = $executors;

        return $this;
    }

    /**
     * Gets icon.
     *
     * @return string|null
     */
    public function getIcon()
    {
        return $this->icon;
    }

    /**
     * Sets icon.
     *
     * @param string|null $icon
     *
     * @return $this
     */
    public function setIcon($icon = null)
    {
        $this->icon = $icon;

        return $this;
    }

    /**
     * Gets iconClassName.
     *
     * @return string|null
     */
    public function getIconClassName()
    {
        return $this->iconClassName;
    }

    /**
     * Sets iconClassName.
     *
     * @param string|null $iconClassName
     *
     * @return $this
     */
    public function setIconClassName($iconClassName = null)
    {
        $this->iconClassName = $iconClassName;

        return $this;
    }

    /**
     * Gets idle.
     *
     * @return bool|null
     */
    public function isIdle()
    {
        return $this->idle;
    }

    /**
     * Sets idle.
     *
     * @param bool|null $idle
     *
     * @return $this
     */
    public function setIdle($idle = null)
    {
        $this->idle = $idle;

        return $this;
    }

    /**
     * Gets jnlpAgent.
     *
     * @return bool|null
     */
    public function isJnlpAgent()
    {
        return $this->jnlpAgent;
    }

    /**
     * Sets jnlpAgent.
     *
     * @param bool|null $jnlpAgent
     *
     * @return $this
     */
    public function setJnlpAgent($jnlpAgent = null)
    {
        $this->jnlpAgent = $jnlpAgent;

        return $this;
    }

    /**
     * Gets launchSupported.
     *
     * @return bool|null
     */
    public function isLaunchSupported()
    {
        return $this->launchSupported;
    }

    /**
     * Sets launchSupported.
     *
     * @param bool|null $launchSupported
     *
     * @return $this
     */
    public function setLaunchSupported($launchSupported = null)
    {
        $this->launchSupported = $launchSupported;

        return $this;
    }

    /**
     * Gets loadStatistics.
     *
     * @return OpenAPI\Server\Model\Label1|null
     */
    public function getLoadStatistics(): ?Label1
    {
        return $this->loadStatistics;
    }

    /**
     * Sets loadStatistics.
     *
     * @param OpenAPI\Server\Model\Label1|null $loadStatistics
     *
     * @return $this
     */
    public function setLoadStatistics(Label1 $loadStatistics = null)
    {
        $this->loadStatistics = $loadStatistics;

        return $this;
    }

    /**
     * Gets manualLaunchAllowed.
     *
     * @return bool|null
     */
    public function isManualLaunchAllowed()
    {
        return $this->manualLaunchAllowed;
    }

    /**
     * Sets manualLaunchAllowed.
     *
     * @param bool|null $manualLaunchAllowed
     *
     * @return $this
     */
    public function setManualLaunchAllowed($manualLaunchAllowed = null)
    {
        $this->manualLaunchAllowed = $manualLaunchAllowed;

        return $this;
    }

    /**
     * Gets monitorData.
     *
     * @return OpenAPI\Server\Model\HudsonMasterComputermonitorData|null
     */
    public function getMonitorData(): ?HudsonMasterComputermonitorData
    {
        return $this->monitorData;
    }

    /**
     * Sets monitorData.
     *
     * @param OpenAPI\Server\Model\HudsonMasterComputermonitorData|null $monitorData
     *
     * @return $this
     */
    public function setMonitorData(HudsonMasterComputermonitorData $monitorData = null)
    {
        $this->monitorData = $monitorData;

        return $this;
    }

    /**
     * Gets numExecutors.
     *
     * @return int|null
     */
    public function getNumExecutors()
    {
        return $this->numExecutors;
    }

    /**
     * Sets numExecutors.
     *
     * @param int|null $numExecutors
     *
     * @return $this
     */
    public function setNumExecutors($numExecutors = null)
    {
        $this->numExecutors = $numExecutors;

        return $this;
    }

    /**
     * Gets offline.
     *
     * @return bool|null
     */
    public function isOffline()
    {
        return $this->offline;
    }

    /**
     * Sets offline.
     *
     * @param bool|null $offline
     *
     * @return $this
     */
    public function setOffline($offline = null)
    {
        $this->offline = $offline;

        return $this;
    }

    /**
     * Gets offlineCause.
     *
     * @return string|null
     */
    public function getOfflineCause()
    {
        return $this->offlineCause;
    }

    /**
     * Sets offlineCause.
     *
     * @param string|null $offlineCause
     *
     * @return $this
     */
    public function setOfflineCause($offlineCause = null)
    {
        $this->offlineCause = $offlineCause;

        return $this;
    }

    /**
     * Gets offlineCauseReason.
     *
     * @return string|null
     */
    public function getOfflineCauseReason()
    {
        return $this->offlineCauseReason;
    }

    /**
     * Sets offlineCauseReason.
     *
     * @param string|null $offlineCauseReason
     *
     * @return $this
     */
    public function setOfflineCauseReason($offlineCauseReason = null)
    {
        $this->offlineCauseReason = $offlineCauseReason;

        return $this;
    }

    /**
     * Gets temporarilyOffline.
     *
     * @return bool|null
     */
    public function isTemporarilyOffline()
    {
        return $this->temporarilyOffline;
    }

    /**
     * Sets temporarilyOffline.
     *
     * @param bool|null $temporarilyOffline
     *
     * @return $this
     */
    public function setTemporarilyOffline($temporarilyOffline = null)
    {
        $this->temporarilyOffline = $temporarilyOffline;

        return $this;
    }
}


