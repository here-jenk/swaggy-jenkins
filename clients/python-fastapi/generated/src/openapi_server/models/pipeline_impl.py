# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.pipeline_impllinks import PipelineImpllinks


class PipelineImpl(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    PipelineImpl - a model defined in OpenAPI

        _class: The _class of this PipelineImpl [Optional].
        display_name: The display_name of this PipelineImpl [Optional].
        estimated_duration_in_millis: The estimated_duration_in_millis of this PipelineImpl [Optional].
        full_name: The full_name of this PipelineImpl [Optional].
        latest_run: The latest_run of this PipelineImpl [Optional].
        name: The name of this PipelineImpl [Optional].
        organization: The organization of this PipelineImpl [Optional].
        weather_score: The weather_score of this PipelineImpl [Optional].
        links: The links of this PipelineImpl [Optional].
    """

    _class: Optional[str] = Field(alias="_class", default=None)
    display_name: Optional[str] = Field(alias="displayName", default=None)
    estimated_duration_in_millis: Optional[int] = Field(alias="estimatedDurationInMillis", default=None)
    full_name: Optional[str] = Field(alias="fullName", default=None)
    latest_run: Optional[str] = Field(alias="latestRun", default=None)
    name: Optional[str] = Field(alias="name", default=None)
    organization: Optional[str] = Field(alias="organization", default=None)
    weather_score: Optional[int] = Field(alias="weatherScore", default=None)
    links: Optional[PipelineImpllinks] = Field(alias="_links", default=None)

PipelineImpl.update_forward_refs()
