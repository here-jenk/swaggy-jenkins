--  Swaggy Jenkins
--  Jenkins API clients generated from Swagger / Open API specification
--
--  The version of the OpenAPI document: 1.1.1
--  Contact: blah@cliffano.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.4.0.
--  https://openapi-generator.tech
--  Do not edit the class manually.


package body .Models is
   pragma Style_Checks ("-mr");

   pragma Warnings (Off, "*use clause for package*");

   use Swagger.Streams;



   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubContent_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("sha", Value.Sha);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("repo", Value.Repo);
      Into.Write_Entity ("size", Value.Size);
      Into.Write_Entity ("owner", Value.Owner);
      Into.Write_Entity ("path", Value.Path);
      Into.Write_Entity ("base64Data", Value.Base_64Data);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubContent_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubContent_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "sha", Value.Sha);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "repo", Value.Repo);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
      Swagger.Streams.Deserialize (Object, "owner", Value.Owner);
      Swagger.Streams.Deserialize (Object, "path", Value.Path);
      Swagger.Streams.Deserialize (Object, "base64Data", Value.Base_64Data);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubContent_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubContent_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubFile_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "content", Value.Content);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubFile_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubFile_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "content", Value.Content);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubFile_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubFile_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueItemImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("expectedBuildNumber", Value.Expected_Build_Number);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("queuedTime", Value.Queued_Time);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueItemImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueItemImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "expectedBuildNumber", Value.Expected_Build_Number);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "queuedTime", Value.Queued_Time);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueItemImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : QueueItemImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitemlatestRun_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("enQueueTime", Value.En_Queue_Time);
      Into.Write_Entity ("endTime", Value.End_Time);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("runSummary", Value.Run_Summary);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("commitId", Value.Commit_Id);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitemlatestRun_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitemlatestRun_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "enQueueTime", Value.En_Queue_Time);
      Swagger.Streams.Deserialize (Object, "endTime", Value.End_Time);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "runSummary", Value.Run_Summary);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "commitId", Value.Commit_Id);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitemlatestRun_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineBranchesitemlatestRun_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImplpermissions_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("create", Value.Create);
      Into.Write_Entity ("read", Value.Read);
      Into.Write_Entity ("start", Value.Start);
      Into.Write_Entity ("stop", Value.Stop);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImplpermissions_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImplpermissions_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "create", Value.Create);
      Swagger.Streams.Deserialize (Object, "read", Value.Read);
      Swagger.Streams.Deserialize (Object, "start", Value.Start);
      Swagger.Streams.Deserialize (Object, "stop", Value.Stop);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImplpermissions_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BranchImplpermissions_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in StringParameterValue_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("value", Value.Value);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in StringParameterValue_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out StringParameterValue_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "value", Value.Value);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out StringParameterValue_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : StringParameterValue_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in StringParameterDefinition_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "defaultParameterValue", Value.Default_Parameter_Value);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("type", Value.P_Type);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in StringParameterDefinition_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out StringParameterDefinition_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "defaultParameterValue", Value.Default_Parameter_Value);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out StringParameterDefinition_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : StringParameterDefinition_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineActivityartifacts_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("size", Value.Size);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineActivityartifacts_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineActivityartifacts_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineActivityartifacts_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineActivityartifacts_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineActivity_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "artifacts", Value.Artifacts);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("enQueueTime", Value.En_Queue_Time);
      Into.Write_Entity ("endTime", Value.End_Time);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("runSummary", Value.Run_Summary);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("commitId", Value.Commit_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineActivity_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineActivity_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "artifacts", Value.Artifacts);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "enQueueTime", Value.En_Queue_Time);
      Swagger.Streams.Deserialize (Object, "endTime", Value.End_Time);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "runSummary", Value.Run_Summary);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "commitId", Value.Commit_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineActivity_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineActivity_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Organisation_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Organisation_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Organisation_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Organisation_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Organisation_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MultibranchPipeline_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("latestRun", Value.Latest_Run);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("weatherScore", Value.Weather_Score);
      Serialize (Into, "branchNames", Value.Branch_Names);
      Into.Write_Entity ("numberOfFailingBranches", Value.Number_Of_Failing_Branches);
      Into.Write_Entity ("numberOfFailingPullRequests", Value.Number_Of_Failing_Pull_Requests);
      Into.Write_Entity ("numberOfSuccessfulBranches", Value.Number_Of_Successful_Branches);
      Into.Write_Entity ("numberOfSuccessfulPullRequests", Value.Number_Of_Successful_Pull_Requests);
      Into.Write_Entity ("totalNumberOfBranches", Value.Total_Number_Of_Branches);
      Into.Write_Entity ("totalNumberOfPullRequests", Value.Total_Number_Of_Pull_Requests);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in MultibranchPipeline_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MultibranchPipeline_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "latestRun", Value.Latest_Run);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "weatherScore", Value.Weather_Score);
      Swagger.Streams.Deserialize (Object, "branchNames", Value.Branch_Names);
      Swagger.Streams.Deserialize (Object, "numberOfFailingBranches", Value.Number_Of_Failing_Branches);
      Swagger.Streams.Deserialize (Object, "numberOfFailingPullRequests", Value.Number_Of_Failing_Pull_Requests);
      Swagger.Streams.Deserialize (Object, "numberOfSuccessfulBranches", Value.Number_Of_Successful_Branches);
      Swagger.Streams.Deserialize (Object, "numberOfSuccessfulPullRequests", Value.Number_Of_Successful_Pull_Requests);
      Swagger.Streams.Deserialize (Object, "totalNumberOfBranches", Value.Total_Number_Of_Branches);
      Swagger.Streams.Deserialize (Object, "totalNumberOfPullRequests", Value.Total_Number_Of_Pull_Requests);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out MultibranchPipeline_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : MultibranchPipeline_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmptyChangeLogSet_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("kind", Value.Kind);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in EmptyChangeLogSet_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmptyChangeLogSet_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "kind", Value.Kind);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out EmptyChangeLogSet_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : EmptyChangeLogSet_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CauseUserIdCause_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("shortDescription", Value.Short_Description);
      Into.Write_Entity ("userId", Value.User_Id);
      Into.Write_Entity ("userName", Value.User_Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CauseUserIdCause_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out CauseUserIdCause_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "shortDescription", Value.Short_Description);
      Swagger.Streams.Deserialize (Object, "userId", Value.User_Id);
      Swagger.Streams.Deserialize (Object, "userName", Value.User_Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out CauseUserIdCause_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : CauseUserIdCause_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CauseAction_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "causes", Value.Causes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in CauseAction_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out CauseAction_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "causes", Value.Causes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out CauseAction_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : CauseAction_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleBuild_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("number", Value.Number);
      Into.Write_Entity ("url", Value.Url);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("building", Value.Building);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("duration", Value.Duration);
      Into.Write_Entity ("estimatedDuration", Value.Estimated_Duration);
      Into.Write_Entity ("executor", Value.Executor);
      Into.Write_Entity ("fullDisplayName", Value.Full_Display_Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("keepLog", Value.Keep_Log);
      Into.Write_Entity ("queueId", Value.Queue_Id);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("timestamp", Value.Timestamp);
      Into.Write_Entity ("builtOn", Value.Built_On);
      Serialize (Into, "changeSet", Value.Change_Set);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleBuild_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleBuild_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "number", Value.Number);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "building", Value.Building);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "duration", Value.Duration);
      Swagger.Streams.Deserialize (Object, "estimatedDuration", Value.Estimated_Duration);
      Swagger.Streams.Deserialize (Object, "executor", Value.Executor);
      Swagger.Streams.Deserialize (Object, "fullDisplayName", Value.Full_Display_Name);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "keepLog", Value.Keep_Log);
      Swagger.Streams.Deserialize (Object, "queueId", Value.Queue_Id);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "timestamp", Value.Timestamp);
      Swagger.Streams.Deserialize (Object, "builtOn", Value.Built_On);
      Deserialize (Object, "changeSet", Value.Change_Set);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleBuild_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FreeStyleBuild_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputerexecutors_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "currentExecutable", Value.Current_Executable);
      Into.Write_Entity ("idle", Value.Idle);
      Into.Write_Entity ("likelyStuck", Value.Likely_Stuck);
      Into.Write_Entity ("number", Value.Number);
      Into.Write_Entity ("progress", Value.Progress);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputerexecutors_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputerexecutors_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "currentExecutable", Value.Current_Executable);
      Swagger.Streams.Deserialize (Object, "idle", Value.Idle);
      Swagger.Streams.Deserialize (Object, "likelyStuck", Value.Likely_Stuck);
      Swagger.Streams.Deserialize (Object, "number", Value.Number);
      Swagger.Streams.Deserialize (Object, "progress", Value.Progress);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputerexecutors_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : HudsonMasterComputerexecutors_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProjecthealthReport_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("iconClassName", Value.Icon_Class_Name);
      Into.Write_Entity ("iconUrl", Value.Icon_Url);
      Into.Write_Entity ("score", Value.Score);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProjecthealthReport_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProjecthealthReport_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "iconClassName", Value.Icon_Class_Name);
      Swagger.Streams.Deserialize (Object, "iconUrl", Value.Icon_Url);
      Swagger.Streams.Deserialize (Object, "score", Value.Score);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProjecthealthReport_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FreeStyleProjecthealthReport_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AllView_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("url", Value.Url);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in AllView_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out AllView_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out AllView_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : AllView_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonassignedLabels_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonassignedLabels_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonassignedLabels_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonassignedLabels_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : HudsonassignedLabels_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ResponseTimeMonitorData_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("timestamp", Value.Timestamp);
      Into.Write_Entity ("average", Value.Average);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ResponseTimeMonitorData_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ResponseTimeMonitorData_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "timestamp", Value.Timestamp);
      Swagger.Streams.Deserialize (Object, "average", Value.Average);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ResponseTimeMonitorData_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ResponseTimeMonitorData_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SwapSpaceMonitorMemoryUsage2_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("availablePhysicalMemory", Value.Available_Physical_Memory);
      Into.Write_Entity ("availableSwapSpace", Value.Available_Swap_Space);
      Into.Write_Entity ("totalPhysicalMemory", Value.Total_Physical_Memory);
      Into.Write_Entity ("totalSwapSpace", Value.Total_Swap_Space);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in SwapSpaceMonitorMemoryUsage2_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SwapSpaceMonitorMemoryUsage2_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "availablePhysicalMemory", Value.Available_Physical_Memory);
      Swagger.Streams.Deserialize (Object, "availableSwapSpace", Value.Available_Swap_Space);
      Swagger.Streams.Deserialize (Object, "totalPhysicalMemory", Value.Total_Physical_Memory);
      Swagger.Streams.Deserialize (Object, "totalSwapSpace", Value.Total_Swap_Space);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out SwapSpaceMonitorMemoryUsage2_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : SwapSpaceMonitorMemoryUsage2_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Label1_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Label1_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Label1_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Label1_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Label1_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DiskSpaceMonitorDescriptorDiskSpace_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("timestamp", Value.Timestamp);
      Into.Write_Entity ("path", Value.Path);
      Into.Write_Entity ("size", Value.Size);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DiskSpaceMonitorDescriptorDiskSpace_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DiskSpaceMonitorDescriptorDiskSpace_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "timestamp", Value.Timestamp);
      Swagger.Streams.Deserialize (Object, "path", Value.Path);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DiskSpaceMonitorDescriptorDiskSpace_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : DiskSpaceMonitorDescriptorDiskSpace_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ClockDifference_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("diff", Value.Diff);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ClockDifference_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ClockDifference_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "diff", Value.Diff);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ClockDifference_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ClockDifference_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputermonitorData_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "hudson.node_monitors.SwapSpaceMonitor", Value.Hudson_Node_Monitors_Swap_Space_Monitor);
      Serialize (Into, "hudson.node_monitors.TemporarySpaceMonitor", Value.Hudson_Node_Monitors_Temporary_Space_Monitor);
      Serialize (Into, "hudson.node_monitors.DiskSpaceMonitor", Value.Hudson_Node_Monitors_Disk_Space_Monitor);
      Into.Write_Entity ("hudson.node_monitors.ArchitectureMonitor", Value.Hudson_Node_Monitors_Architecture_Monitor);
      Serialize (Into, "hudson.node_monitors.ResponseTimeMonitor", Value.Hudson_Node_Monitors_Response_Time_Monitor);
      Serialize (Into, "hudson.node_monitors.ClockMonitor", Value.Hudson_Node_Monitors_Clock_Monitor);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputermonitorData_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputermonitorData_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "hudson.node_monitors.SwapSpaceMonitor", Value.Hudson_Node_Monitors_Swap_Space_Monitor);
      Deserialize (Object, "hudson.node_monitors.TemporarySpaceMonitor", Value.Hudson_Node_Monitors_Temporary_Space_Monitor);
      Deserialize (Object, "hudson.node_monitors.DiskSpaceMonitor", Value.Hudson_Node_Monitors_Disk_Space_Monitor);
      Swagger.Streams.Deserialize (Object, "hudson.node_monitors.ArchitectureMonitor", Value.Hudson_Node_Monitors_Architecture_Monitor);
      Deserialize (Object, "hudson.node_monitors.ResponseTimeMonitor", Value.Hudson_Node_Monitors_Response_Time_Monitor);
      Deserialize (Object, "hudson.node_monitors.ClockMonitor", Value.Hudson_Node_Monitors_Clock_Monitor);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputermonitorData_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : HudsonMasterComputermonitorData_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputer_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Serialize (Into, "executors", Value.Executors);
      Into.Write_Entity ("icon", Value.Icon);
      Into.Write_Entity ("iconClassName", Value.Icon_Class_Name);
      Into.Write_Entity ("idle", Value.Idle);
      Into.Write_Entity ("jnlpAgent", Value.Jnlp_Agent);
      Into.Write_Entity ("launchSupported", Value.Launch_Supported);
      Serialize (Into, "loadStatistics", Value.Load_Statistics);
      Into.Write_Entity ("manualLaunchAllowed", Value.Manual_Launch_Allowed);
      Serialize (Into, "monitorData", Value.Monitor_Data);
      Into.Write_Entity ("numExecutors", Value.Num_Executors);
      Into.Write_Entity ("offline", Value.Offline);
      Into.Write_Entity ("offlineCause", Value.Offline_Cause);
      Into.Write_Entity ("offlineCauseReason", Value.Offline_Cause_Reason);
      Into.Write_Entity ("temporarilyOffline", Value.Temporarily_Offline);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in HudsonMasterComputer_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputer_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Deserialize (Object, "executors", Value.Executors);
      Swagger.Streams.Deserialize (Object, "icon", Value.Icon);
      Swagger.Streams.Deserialize (Object, "iconClassName", Value.Icon_Class_Name);
      Swagger.Streams.Deserialize (Object, "idle", Value.Idle);
      Swagger.Streams.Deserialize (Object, "jnlpAgent", Value.Jnlp_Agent);
      Swagger.Streams.Deserialize (Object, "launchSupported", Value.Launch_Supported);
      Deserialize (Object, "loadStatistics", Value.Load_Statistics);
      Swagger.Streams.Deserialize (Object, "manualLaunchAllowed", Value.Manual_Launch_Allowed);
      Deserialize (Object, "monitorData", Value.Monitor_Data);
      Swagger.Streams.Deserialize (Object, "numExecutors", Value.Num_Executors);
      Swagger.Streams.Deserialize (Object, "offline", Value.Offline);
      Swagger.Streams.Deserialize (Object, "offlineCause", Value.Offline_Cause);
      Swagger.Streams.Deserialize (Object, "offlineCauseReason", Value.Offline_Cause_Reason);
      Swagger.Streams.Deserialize (Object, "temporarilyOffline", Value.Temporarily_Offline);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out HudsonMasterComputer_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : HudsonMasterComputer_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ComputerSet_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("busyExecutors", Value.Busy_Executors);
      Serialize (Into, "computer", Value.Computer);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("totalExecutors", Value.Total_Executors);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ComputerSet_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ComputerSet_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "busyExecutors", Value.Busy_Executors);
      Deserialize (Object, "computer", Value.Computer);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "totalExecutors", Value.Total_Executors);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ComputerSet_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ComputerSet_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultCrumbIssuer_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("crumb", Value.Crumb);
      Into.Write_Entity ("crumbRequestField", Value.Crumb_Request_Field);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in DefaultCrumbIssuer_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DefaultCrumbIssuer_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "crumb", Value.Crumb);
      Swagger.Streams.Deserialize (Object, "crumbRequestField", Value.Crumb_Request_Field);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out DefaultCrumbIssuer_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : DefaultCrumbIssuer_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UnlabeledLoadStatistics_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in UnlabeledLoadStatistics_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out UnlabeledLoadStatistics_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out UnlabeledLoadStatistics_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : UnlabeledLoadStatistics_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProjectactions_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProjectactions_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProjectactions_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProjectactions_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FreeStyleProjectactions_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NullSCM_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NullSCM_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out NullSCM_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out NullSCM_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : NullSCM_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProject_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("color", Value.Color);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("displayNameOrNull", Value.Display_Name_Or_Null);
      Into.Write_Entity ("fullDisplayName", Value.Full_Display_Name);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("buildable", Value.Buildable);
      Serialize (Into, "builds", Value.Builds);
      Serialize (Into, "firstBuild", Value.First_Build);
      Serialize (Into, "healthReport", Value.Health_Report);
      Into.Write_Entity ("inQueue", Value.In_Queue);
      Into.Write_Entity ("keepDependencies", Value.Keep_Dependencies);
      Serialize (Into, "lastBuild", Value.Last_Build);
      Serialize (Into, "lastCompletedBuild", Value.Last_Completed_Build);
      Into.Write_Entity ("lastFailedBuild", Value.Last_Failed_Build);
      Serialize (Into, "lastStableBuild", Value.Last_Stable_Build);
      Serialize (Into, "lastSuccessfulBuild", Value.Last_Successful_Build);
      Into.Write_Entity ("lastUnstableBuild", Value.Last_Unstable_Build);
      Into.Write_Entity ("lastUnsuccessfulBuild", Value.Last_Unsuccessful_Build);
      Into.Write_Entity ("nextBuildNumber", Value.Next_Build_Number);
      Into.Write_Entity ("queueItem", Value.Queue_Item);
      Into.Write_Entity ("concurrentBuild", Value.Concurrent_Build);
      Serialize (Into, "scm", Value.Scm);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FreeStyleProject_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProject_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "color", Value.Color);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "displayNameOrNull", Value.Display_Name_Or_Null);
      Swagger.Streams.Deserialize (Object, "fullDisplayName", Value.Full_Display_Name);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "buildable", Value.Buildable);
      Deserialize (Object, "builds", Value.Builds);
      Deserialize (Object, "firstBuild", Value.First_Build);
      Deserialize (Object, "healthReport", Value.Health_Report);
      Swagger.Streams.Deserialize (Object, "inQueue", Value.In_Queue);
      Swagger.Streams.Deserialize (Object, "keepDependencies", Value.Keep_Dependencies);
      Deserialize (Object, "lastBuild", Value.Last_Build);
      Deserialize (Object, "lastCompletedBuild", Value.Last_Completed_Build);
      Swagger.Streams.Deserialize (Object, "lastFailedBuild", Value.Last_Failed_Build);
      Deserialize (Object, "lastStableBuild", Value.Last_Stable_Build);
      Deserialize (Object, "lastSuccessfulBuild", Value.Last_Successful_Build);
      Swagger.Streams.Deserialize (Object, "lastUnstableBuild", Value.Last_Unstable_Build);
      Swagger.Streams.Deserialize (Object, "lastUnsuccessfulBuild", Value.Last_Unsuccessful_Build);
      Swagger.Streams.Deserialize (Object, "nextBuildNumber", Value.Next_Build_Number);
      Swagger.Streams.Deserialize (Object, "queueItem", Value.Queue_Item);
      Swagger.Streams.Deserialize (Object, "concurrentBuild", Value.Concurrent_Build);
      Deserialize (Object, "scm", Value.Scm);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FreeStyleProject_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FreeStyleProject_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListView_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("description", Value.Description);
      Serialize (Into, "jobs", Value.Jobs);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("url", Value.Url);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ListView_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ListView_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "jobs", Value.Jobs);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ListView_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ListView_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Hudson_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "assignedLabels", Value.Assigned_Labels);
      Into.Write_Entity ("mode", Value.Mode);
      Into.Write_Entity ("nodeDescription", Value.Node_Description);
      Into.Write_Entity ("nodeName", Value.Node_Name);
      Into.Write_Entity ("numExecutors", Value.Num_Executors);
      Into.Write_Entity ("description", Value.Description);
      Serialize (Into, "jobs", Value.Jobs);
      Serialize (Into, "primaryView", Value.Primary_View);
      Into.Write_Entity ("quietingDown", Value.Quieting_Down);
      Into.Write_Entity ("slaveAgentPort", Value.Slave_Agent_Port);
      Serialize (Into, "unlabeledLoad", Value.Unlabeled_Load);
      Into.Write_Entity ("useCrumbs", Value.Use_Crumbs);
      Into.Write_Entity ("useSecurity", Value.Use_Security);
      Serialize (Into, "views", Value.Views);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Hudson_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Hudson_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "assignedLabels", Value.Assigned_Labels);
      Swagger.Streams.Deserialize (Object, "mode", Value.Mode);
      Swagger.Streams.Deserialize (Object, "nodeDescription", Value.Node_Description);
      Swagger.Streams.Deserialize (Object, "nodeName", Value.Node_Name);
      Swagger.Streams.Deserialize (Object, "numExecutors", Value.Num_Executors);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Deserialize (Object, "jobs", Value.Jobs);
      Deserialize (Object, "primaryView", Value.Primary_View);
      Swagger.Streams.Deserialize (Object, "quietingDown", Value.Quieting_Down);
      Swagger.Streams.Deserialize (Object, "slaveAgentPort", Value.Slave_Agent_Port);
      Deserialize (Object, "unlabeledLoad", Value.Unlabeled_Load);
      Swagger.Streams.Deserialize (Object, "useCrumbs", Value.Use_Crumbs);
      Swagger.Streams.Deserialize (Object, "useSecurity", Value.Use_Security);
      Deserialize (Object, "views", Value.Views);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Hudson_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Hudson_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueBlockedItem_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("blocked", Value.Blocked);
      Into.Write_Entity ("buildable", Value.Buildable);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("inQueueSince", Value.In_Queue_Since);
      Into.Write_Entity ("params", Value.Params);
      Into.Write_Entity ("stuck", Value.Stuck);
      Serialize (Into, "task", Value.P_Task);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("why", Value.Why);
      Into.Write_Entity ("buildableStartMilliseconds", Value.Buildable_Start_Milliseconds);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueBlockedItem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueBlockedItem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "blocked", Value.Blocked);
      Swagger.Streams.Deserialize (Object, "buildable", Value.Buildable);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "inQueueSince", Value.In_Queue_Since);
      Swagger.Streams.Deserialize (Object, "params", Value.Params);
      Swagger.Streams.Deserialize (Object, "stuck", Value.Stuck);
      Deserialize (Object, "task", Value.P_Task);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "why", Value.Why);
      Swagger.Streams.Deserialize (Object, "buildableStartMilliseconds", Value.Buildable_Start_Milliseconds);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueBlockedItem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : QueueBlockedItem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Queue_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "items", Value.Items);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Queue_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Queue_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "items", Value.Items);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Queue_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Queue_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueLeftItem_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("blocked", Value.Blocked);
      Into.Write_Entity ("buildable", Value.Buildable);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("inQueueSince", Value.In_Queue_Since);
      Into.Write_Entity ("params", Value.Params);
      Into.Write_Entity ("stuck", Value.Stuck);
      Serialize (Into, "task", Value.P_Task);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("why", Value.Why);
      Into.Write_Entity ("cancelled", Value.Cancelled);
      Serialize (Into, "executable", Value.Executable);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in QueueLeftItem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueLeftItem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "blocked", Value.Blocked);
      Swagger.Streams.Deserialize (Object, "buildable", Value.Buildable);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "inQueueSince", Value.In_Queue_Since);
      Swagger.Streams.Deserialize (Object, "params", Value.Params);
      Swagger.Streams.Deserialize (Object, "stuck", Value.Stuck);
      Deserialize (Object, "task", Value.P_Task);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "why", Value.Why);
      Swagger.Streams.Deserialize (Object, "cancelled", Value.Cancelled);
      Deserialize (Object, "executable", Value.Executable);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out QueueLeftItem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : QueueLeftItem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Link_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("href", Value.Href);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Link_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Link_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "href", Value.Href);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Link_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Link_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "actions", Value.Actions);
      Serialize (Into, "runs", Value.Runs);
      Serialize (Into, "queue", Value.Queue);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "actions", Value.Actions);
      Deserialize (Object, "runs", Value.Runs);
      Deserialize (Object, "queue", Value.Queue);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BranchImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorylinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorylinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorylinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorylinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRepositorylinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRespositoryContainerlinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRespositoryContainerlinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRespositoryContainerlinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRespositoryContainerlinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRespositoryContainerlinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubScmlinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubScmlinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubScmlinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubScmlinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubScmlinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubScm_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("credentialId", Value.Credential_Id);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("uri", Value.Uri);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubScm_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubScm_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "credentialId", Value.Credential_Id);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "uri", Value.Uri);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubScm_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubScm_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InputStepImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InputStepImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InputStepImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InputStepImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : InputStepImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InputStepImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("message", Value.Message);
      Into.Write_Entity ("ok", Value.Ok);
      Serialize (Into, "parameters", Value.Parameters);
      Into.Write_Entity ("submitter", Value.Submitter);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InputStepImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InputStepImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "message", Value.Message);
      Swagger.Streams.Deserialize (Object, "ok", Value.Ok);
      Deserialize (Object, "parameters", Value.Parameters);
      Swagger.Streams.Deserialize (Object, "submitter", Value.Submitter);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InputStepImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : InputStepImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FavoriteImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FavoriteImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FavoriteImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FavoriteImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FavoriteImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1links_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1links_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1links_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1links_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ExtensionClassContainerImpl1links_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ExtensionClassImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "classes", Value.Classes);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "classes", Value.Classes);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ExtensionClassImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1map_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "io.jenkins.blueocean.service.embedded.rest.PipelineImpl", Value.Io_Jenkins_Blueocean_Service_Embedded_Rest_Pipeline_Impl);
      Serialize (Into, "io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl", Value.Io_Jenkins_Blueocean_Service_Embedded_Rest_Multi_Branch_Pipeline_Impl);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1map_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1map_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "io.jenkins.blueocean.service.embedded.rest.PipelineImpl", Value.Io_Jenkins_Blueocean_Service_Embedded_Rest_Pipeline_Impl);
      Deserialize (Object, "io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl", Value.Io_Jenkins_Blueocean_Service_Embedded_Rest_Multi_Branch_Pipeline_Impl);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1map_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ExtensionClassContainerImpl1map_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "map", Value.Map);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ExtensionClassContainerImpl1_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "map", Value.Map);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ExtensionClassContainerImpl1_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ExtensionClassContainerImpl1_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "runs", Value.Runs);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "queue", Value.Queue);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "runs", Value.Runs);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "queue", Value.Queue);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("latestRun", Value.Latest_Run);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("weatherScore", Value.Weather_Score);
      Serialize (Into, "_links", Value.P__links);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "latestRun", Value.Latest_Run);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "weatherScore", Value.Weather_Score);
      Deserialize (Object, "_links", Value.P__links);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FavoriteImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "item", Value.Item);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in FavoriteImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FavoriteImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "item", Value.Item);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out FavoriteImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : FavoriteImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "actions", Value.Actions);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "actions", Value.Actions);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineStepImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("id", Value.Id);
      Serialize (Into, "input", Value.Input);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineStepImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Deserialize (Object, "input", Value.Input);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineStepImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineStepImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorieslinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorieslinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorieslinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorieslinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRepositorieslinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubOrganizationlinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "repositories", Value.Repositories);
      Serialize (Into, "self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubOrganizationlinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubOrganizationlinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "repositories", Value.Repositories);
      Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubOrganizationlinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubOrganizationlinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubOrganization_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("jenkinsOrganizationPipeline", Value.Jenkins_Organization_Pipeline);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubOrganization_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubOrganization_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "jenkinsOrganizationPipeline", Value.Jenkins_Organization_Pipeline);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubOrganization_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubOrganization_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunImpllinks_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "nodes", Value.Nodes);
      Serialize (Into, "log", Value.Log);
      Serialize (Into, "self", Value.Self);
      Serialize (Into, "actions", Value.Actions);
      Serialize (Into, "steps", Value.Steps);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunImpllinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunImpllinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "nodes", Value.Nodes);
      Deserialize (Object, "log", Value.Log);
      Deserialize (Object, "self", Value.Self);
      Deserialize (Object, "actions", Value.Actions);
      Deserialize (Object, "steps", Value.Steps);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunImpllinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRunImpllinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("enQueueTime", Value.En_Queue_Time);
      Into.Write_Entity ("endTime", Value.End_Time);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("runSummary", Value.Run_Summary);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("commitId", Value.Commit_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "enQueueTime", Value.En_Queue_Time);
      Swagger.Streams.Deserialize (Object, "endTime", Value.End_Time);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "runSummary", Value.Run_Summary);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "commitId", Value.Commit_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRunImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("fullDisplayName", Value.Full_Display_Name);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("organization", Value.Organization);
      Serialize (Into, "parameters", Value.Parameters);
      Serialize (Into, "permissions", Value.Permissions);
      Into.Write_Entity ("weatherScore", Value.Weather_Score);
      Into.Write_Entity ("pullRequest", Value.Pull_Request);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "latestRun", Value.Latest_Run);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in BranchImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "fullDisplayName", Value.Full_Display_Name);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Deserialize (Object, "parameters", Value.Parameters);
      Deserialize (Object, "permissions", Value.Permissions);
      Swagger.Streams.Deserialize (Object, "weatherScore", Value.Weather_Score);
      Swagger.Streams.Deserialize (Object, "pullRequest", Value.Pull_Request);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "latestRun", Value.Latest_Run);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out BranchImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : BranchImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ClassesByClass_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "classes", Value.Classes);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ClassesByClass_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ClassesByClass_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "classes", Value.Classes);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ClassesByClass_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : ClassesByClass_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinelatestRunartifacts_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("size", Value.Size);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinelatestRunartifacts_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinelatestRunartifacts_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinelatestRunartifacts_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelinelatestRunartifacts_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinelatestRun_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "artifacts", Value.Artifacts);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("enQueueTime", Value.En_Queue_Time);
      Into.Write_Entity ("endTime", Value.End_Time);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("runSummary", Value.Run_Summary);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("commitId", Value.Commit_Id);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelinelatestRun_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinelatestRun_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "artifacts", Value.Artifacts);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "enQueueTime", Value.En_Queue_Time);
      Swagger.Streams.Deserialize (Object, "endTime", Value.End_Time);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "runSummary", Value.Run_Summary);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "commitId", Value.Commit_Id);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelinelatestRun_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelinelatestRun_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pipeline_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("weatherScore", Value.Weather_Score);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Serialize (Into, "latestRun", Value.Latest_Run);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in Pipeline_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Pipeline_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "weatherScore", Value.Weather_Score);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Deserialize (Object, "latestRun", Value.Latest_Run);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out Pipeline_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : Pipeline_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitempullRequestlinks_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("self", Value.Self);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitempullRequestlinks_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitempullRequestlinks_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "self", Value.Self);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitempullRequestlinks_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineBranchesitempullRequestlinks_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitempullRequest_Type) is
   begin
      Into.Start_Entity (Name);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("author", Value.Author);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("title", Value.Title);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitempullRequest_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitempullRequest_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "author", Value.Author);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "title", Value.Title);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitempullRequest_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineBranchesitempullRequest_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitem_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("weatherScore", Value.Weather_Score);
      Serialize (Into, "latestRun", Value.Latest_Run);
      Into.Write_Entity ("organization", Value.Organization);
      Serialize (Into, "pullRequest", Value.Pull_Request);
      Into.Write_Entity ("totalNumberOfPullRequests", Value.Total_Number_Of_Pull_Requests);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineBranchesitem_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitem_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "weatherScore", Value.Weather_Score);
      Deserialize (Object, "latestRun", Value.Latest_Run);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Deserialize (Object, "pullRequest", Value.Pull_Request);
      Swagger.Streams.Deserialize (Object, "totalNumberOfPullRequests", Value.Total_Number_Of_Pull_Requests);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineBranchesitem_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineBranchesitem_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineFolderImpl_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("numberOfFolders", Value.Number_Of_Folders);
      Into.Write_Entity ("numberOfPipelines", Value.Number_Of_Pipelines);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineFolderImpl_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineFolderImpl_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "numberOfFolders", Value.Number_Of_Folders);
      Swagger.Streams.Deserialize (Object, "numberOfPipelines", Value.Number_Of_Pipelines);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineFolderImpl_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineFolderImpl_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunartifacts_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("name", Value.Name);
      Into.Write_Entity ("size", Value.Size);
      Into.Write_Entity ("url", Value.Url);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunartifacts_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunartifacts_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Swagger.Streams.Deserialize (Object, "size", Value.Size);
      Swagger.Streams.Deserialize (Object, "url", Value.Url);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunartifacts_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRunartifacts_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRun_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "artifacts", Value.Artifacts);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Into.Write_Entity ("enQueueTime", Value.En_Queue_Time);
      Into.Write_Entity ("endTime", Value.End_Time);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("organization", Value.Organization);
      Into.Write_Entity ("pipeline", Value.Pipeline);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("runSummary", Value.Run_Summary);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.Write_Entity ("type", Value.P_Type);
      Into.Write_Entity ("commitId", Value.Commit_Id);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRun_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRun_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "artifacts", Value.Artifacts);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "estimatedDurationInMillis", Value.Estimated_Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "enQueueTime", Value.En_Queue_Time);
      Swagger.Streams.Deserialize (Object, "endTime", Value.End_Time);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "organization", Value.Organization);
      Swagger.Streams.Deserialize (Object, "pipeline", Value.Pipeline);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "runSummary", Value.Run_Summary);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
      Swagger.Streams.Deserialize (Object, "type", Value.P_Type);
      Swagger.Streams.Deserialize (Object, "commitId", Value.Commit_Id);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRun_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRun_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunNodeedges_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunNodeedges_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunNodeedges_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunNodeedges_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRunNodeedges_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunNode_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Serialize (Into, "edges", Value.Edges);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.Write_Entity ("state", Value.State);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in PipelineRunNode_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunNode_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Deserialize (Object, "edges", Value.Edges);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
      Swagger.Streams.Deserialize (Object, "state", Value.State);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out PipelineRunNode_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : PipelineRunNode_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResource_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("displayName", Value.Display_Name);
      Into.Write_Entity ("durationInMillis", Value.Duration_In_Millis);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("result", Value.Result);
      Into.Write_Entity ("startTime", Value.Start_Time);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GenericResource_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResource_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "displayName", Value.Display_Name);
      Swagger.Streams.Deserialize (Object, "durationInMillis", Value.Duration_In_Millis);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "result", Value.Result);
      Swagger.Streams.Deserialize (Object, "startTime", Value.Start_Time);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GenericResource_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GenericResource_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorypermissions_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("admin", Value.Admin);
      Into.Write_Entity ("push", Value.Push);
      Into.Write_Entity ("pull", Value.Pull);
      Into.Write_Entity ("_class", Value.P__class);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositorypermissions_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorypermissions_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "admin", Value.Admin);
      Swagger.Streams.Deserialize (Object, "push", Value.Push);
      Swagger.Streams.Deserialize (Object, "pull", Value.Pull);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositorypermissions_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRepositorypermissions_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepository_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Into.Write_Entity ("defaultBranch", Value.Default_Branch);
      Into.Write_Entity ("description", Value.Description);
      Into.Write_Entity ("name", Value.Name);
      Serialize (Into, "permissions", Value.Permissions);
      Into.Write_Entity ("private", Value.P_Private);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepository_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepository_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Swagger.Streams.Deserialize (Object, "defaultBranch", Value.Default_Branch);
      Swagger.Streams.Deserialize (Object, "description", Value.Description);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
      Deserialize (Object, "permissions", Value.Permissions);
      Swagger.Streams.Deserialize (Object, "private", Value.P_Private);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepository_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRepository_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositories_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "items", Value.Items);
      Into.Write_Entity ("lastPage", Value.Last_Page);
      Into.Write_Entity ("nextPage", Value.Next_Page);
      Into.Write_Entity ("pageSize", Value.Page_Size);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRepositories_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositories_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "items", Value.Items);
      Swagger.Streams.Deserialize (Object, "lastPage", Value.Last_Page);
      Swagger.Streams.Deserialize (Object, "nextPage", Value.Next_Page);
      Swagger.Streams.Deserialize (Object, "pageSize", Value.Page_Size);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRepositories_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRepositories_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRespositoryContainer_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Serialize (Into, "_links", Value.P__links);
      Serialize (Into, "repositories", Value.Repositories);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in GithubRespositoryContainer_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRespositoryContainer_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Deserialize (Object, "_links", Value.P__links);
      Deserialize (Object, "repositories", Value.Repositories);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out GithubRespositoryContainer_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : GithubRespositoryContainer_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;




   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in User_Type) is
   begin
      Into.Start_Entity (Name);
      Into.Write_Entity ("_class", Value.P__class);
      Into.Write_Entity ("id", Value.Id);
      Into.Write_Entity ("fullName", Value.Full_Name);
      Into.Write_Entity ("email", Value.Email);
      Into.Write_Entity ("name", Value.Name);
      Into.End_Entity (Name);
   end Serialize;

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in User_Type_Vectors.Vector) is
   begin
      Into.Start_Array (Name);
      for Item of Value loop
         Serialize (Into, "", Item);
      end loop;
      Into.End_Array (Name);
   end Serialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out User_Type) is
      Object : Swagger.Value_Type;
   begin
      Swagger.Streams.Deserialize (From, Name, Object);
      Swagger.Streams.Deserialize (Object, "_class", Value.P__class);
      Swagger.Streams.Deserialize (Object, "id", Value.Id);
      Swagger.Streams.Deserialize (Object, "fullName", Value.Full_Name);
      Swagger.Streams.Deserialize (Object, "email", Value.Email);
      Swagger.Streams.Deserialize (Object, "name", Value.Name);
   end Deserialize;

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out User_Type_Vectors.Vector) is
      List : Swagger.Value_Array_Type;
      Item : User_Type;
   begin
      Value.Clear;
      Swagger.Streams.Deserialize (From, Name, List);
      for Data of List loop
         Deserialize (Data, "", Item);
         Value.Append (Item);
      end loop;
   end Deserialize;



end .Models;
