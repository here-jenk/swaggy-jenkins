# coding: utf-8

"""
    Swaggy Jenkins

    Jenkins API clients generated from Swagger / Open API specification  # noqa: E501

    The version of the OpenAPI document: 1.5.1-pre.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class MultibranchPipeline(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    displayName = StrSchema
    estimatedDurationInMillis = IntSchema
    latestRun = StrSchema
    name = StrSchema
    organization = StrSchema
    weatherScore = IntSchema
    
    
    class branchNames(
        ListSchema
    ):
        _items = StrSchema
    numberOfFailingBranches = IntSchema
    numberOfFailingPullRequests = IntSchema
    numberOfSuccessfulBranches = IntSchema
    numberOfSuccessfulPullRequests = IntSchema
    totalNumberOfBranches = IntSchema
    totalNumberOfPullRequests = IntSchema
    _class = StrSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        displayName: typing.Union[displayName, Unset] = unset,
        estimatedDurationInMillis: typing.Union[estimatedDurationInMillis, Unset] = unset,
        latestRun: typing.Union[latestRun, Unset] = unset,
        name: typing.Union[name, Unset] = unset,
        organization: typing.Union[organization, Unset] = unset,
        weatherScore: typing.Union[weatherScore, Unset] = unset,
        branchNames: typing.Union[branchNames, Unset] = unset,
        numberOfFailingBranches: typing.Union[numberOfFailingBranches, Unset] = unset,
        numberOfFailingPullRequests: typing.Union[numberOfFailingPullRequests, Unset] = unset,
        numberOfSuccessfulBranches: typing.Union[numberOfSuccessfulBranches, Unset] = unset,
        numberOfSuccessfulPullRequests: typing.Union[numberOfSuccessfulPullRequests, Unset] = unset,
        totalNumberOfBranches: typing.Union[totalNumberOfBranches, Unset] = unset,
        totalNumberOfPullRequests: typing.Union[totalNumberOfPullRequests, Unset] = unset,
        _class: typing.Union[_class, Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'MultibranchPipeline':
        return super().__new__(
            cls,
            *args,
            displayName=displayName,
            estimatedDurationInMillis=estimatedDurationInMillis,
            latestRun=latestRun,
            name=name,
            organization=organization,
            weatherScore=weatherScore,
            branchNames=branchNames,
            numberOfFailingBranches=numberOfFailingBranches,
            numberOfFailingPullRequests=numberOfFailingPullRequests,
            numberOfSuccessfulBranches=numberOfSuccessfulBranches,
            numberOfSuccessfulPullRequests=numberOfSuccessfulPullRequests,
            totalNumberOfBranches=totalNumberOfBranches,
            totalNumberOfPullRequests=totalNumberOfPullRequests,
            _class=_class,
            _configuration=_configuration,
            **kwargs,
        )
