/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * API version: 1.5.1-pre.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GithubRepository struct {

	Class string `json:"_class,omitempty"`

	Links GithubRepositorylinks `json:"_links,omitempty"`

	DefaultBranch string `json:"defaultBranch,omitempty"`

	Description string `json:"description,omitempty"`

	Name string `json:"name,omitempty"`

	Permissions GithubRepositorypermissions `json:"permissions,omitempty"`

	Private bool `json:"private,omitempty"`

	FullName string `json:"fullName,omitempty"`
}

// AssertGithubRepositoryRequired checks if the required fields are not zero-ed
func AssertGithubRepositoryRequired(obj GithubRepository) error {
	if err := AssertGithubRepositorylinksRequired(obj.Links); err != nil {
		return err
	}
	if err := AssertGithubRepositorypermissionsRequired(obj.Permissions); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGithubRepositoryRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GithubRepository (e.g. [][]GithubRepository), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGithubRepositoryRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGithubRepository, ok := obj.(GithubRepository)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGithubRepositoryRequired(aGithubRepository)
	})
}
