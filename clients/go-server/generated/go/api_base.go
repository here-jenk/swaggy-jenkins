/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * API version: 1.5.1-pre.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// BaseApiController binds http requests to an api service and writes the service results to the http response
type BaseApiController struct {
	service BaseApiServicer
	errorHandler ErrorHandler
}

// BaseApiOption for how the controller is set up.
type BaseApiOption func(*BaseApiController)

// WithBaseApiErrorHandler inject ErrorHandler into controller
func WithBaseApiErrorHandler(h ErrorHandler) BaseApiOption {
	return func(c *BaseApiController) {
		c.errorHandler = h
	}
}

// NewBaseApiController creates a default api controller
func NewBaseApiController(s BaseApiServicer, opts ...BaseApiOption) Router {
	controller := &BaseApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the BaseApiController
func (c *BaseApiController) Routes() Routes {
	return Routes{ 
		{
			"GetCrumb",
			strings.ToUpper("Get"),
			"/crumbIssuer/api/json",
			c.GetCrumb,
		},
	}
}

// GetCrumb - 
func (c *BaseApiController) GetCrumb(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetCrumb(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
