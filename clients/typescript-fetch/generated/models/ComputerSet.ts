/* tslint:disable */
/* eslint-disable */
/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HudsonMasterComputer,
    HudsonMasterComputerFromJSON,
    HudsonMasterComputerFromJSONTyped,
    HudsonMasterComputerToJSON,
} from './HudsonMasterComputer';

/**
 * 
 * @export
 * @interface ComputerSet
 */
export interface ComputerSet {
    /**
     * 
     * @type {string}
     * @memberof ComputerSet
     */
    _class?: string;
    /**
     * 
     * @type {number}
     * @memberof ComputerSet
     */
    busyExecutors?: number;
    /**
     * 
     * @type {Array<HudsonMasterComputer>}
     * @memberof ComputerSet
     */
    computer?: Array<HudsonMasterComputer>;
    /**
     * 
     * @type {string}
     * @memberof ComputerSet
     */
    displayName?: string;
    /**
     * 
     * @type {number}
     * @memberof ComputerSet
     */
    totalExecutors?: number;
}

export function ComputerSetFromJSON(json: any): ComputerSet {
    return ComputerSetFromJSONTyped(json, false);
}

export function ComputerSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComputerSet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_class': !exists(json, '_class') ? undefined : json['_class'],
        'busyExecutors': !exists(json, 'busyExecutors') ? undefined : json['busyExecutors'],
        'computer': !exists(json, 'computer') ? undefined : ((json['computer'] as Array<any>).map(HudsonMasterComputerFromJSON)),
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'totalExecutors': !exists(json, 'totalExecutors') ? undefined : json['totalExecutors'],
    };
}

export function ComputerSetToJSON(value?: ComputerSet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_class': value._class,
        'busyExecutors': value.busyExecutors,
        'computer': value.computer === undefined ? undefined : ((value.computer as Array<any>).map(HudsonMasterComputerToJSON)),
        'displayName': value.displayName,
        'totalExecutors': value.totalExecutors,
    };
}

