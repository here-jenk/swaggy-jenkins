/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.5.1-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cliffano.swaggyjenkins.model;

import java.util.Objects;
import java.util.Arrays;
import com.cliffano.swaggyjenkins.model.FreeStyleBuild;
import com.cliffano.swaggyjenkins.model.FreeStyleProjectactions;
import com.cliffano.swaggyjenkins.model.FreeStyleProjecthealthReport;
import com.cliffano.swaggyjenkins.model.NullSCM;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cliffano.swaggyjenkins.JSON;

/**
 * FreeStyleProject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-04T08:16:08.847436Z[Etc/UTC]")
public class FreeStyleProject {
  public static final String SERIALIZED_NAME_PROPERTY_CLASS = "_class";
  @SerializedName(SERIALIZED_NAME_PROPERTY_CLASS)
  private String propertyClass;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_ACTIONS = "actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private List<FreeStyleProjectactions> actions = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME_OR_NULL = "displayNameOrNull";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME_OR_NULL)
  private String displayNameOrNull;

  public static final String SERIALIZED_NAME_FULL_DISPLAY_NAME = "fullDisplayName";
  @SerializedName(SERIALIZED_NAME_FULL_DISPLAY_NAME)
  private String fullDisplayName;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_BUILDABLE = "buildable";
  @SerializedName(SERIALIZED_NAME_BUILDABLE)
  private Boolean buildable;

  public static final String SERIALIZED_NAME_BUILDS = "builds";
  @SerializedName(SERIALIZED_NAME_BUILDS)
  private List<FreeStyleBuild> builds = null;

  public static final String SERIALIZED_NAME_FIRST_BUILD = "firstBuild";
  @SerializedName(SERIALIZED_NAME_FIRST_BUILD)
  private FreeStyleBuild firstBuild;

  public static final String SERIALIZED_NAME_HEALTH_REPORT = "healthReport";
  @SerializedName(SERIALIZED_NAME_HEALTH_REPORT)
  private List<FreeStyleProjecthealthReport> healthReport = null;

  public static final String SERIALIZED_NAME_IN_QUEUE = "inQueue";
  @SerializedName(SERIALIZED_NAME_IN_QUEUE)
  private Boolean inQueue;

  public static final String SERIALIZED_NAME_KEEP_DEPENDENCIES = "keepDependencies";
  @SerializedName(SERIALIZED_NAME_KEEP_DEPENDENCIES)
  private Boolean keepDependencies;

  public static final String SERIALIZED_NAME_LAST_BUILD = "lastBuild";
  @SerializedName(SERIALIZED_NAME_LAST_BUILD)
  private FreeStyleBuild lastBuild;

  public static final String SERIALIZED_NAME_LAST_COMPLETED_BUILD = "lastCompletedBuild";
  @SerializedName(SERIALIZED_NAME_LAST_COMPLETED_BUILD)
  private FreeStyleBuild lastCompletedBuild;

  public static final String SERIALIZED_NAME_LAST_FAILED_BUILD = "lastFailedBuild";
  @SerializedName(SERIALIZED_NAME_LAST_FAILED_BUILD)
  private String lastFailedBuild;

  public static final String SERIALIZED_NAME_LAST_STABLE_BUILD = "lastStableBuild";
  @SerializedName(SERIALIZED_NAME_LAST_STABLE_BUILD)
  private FreeStyleBuild lastStableBuild;

  public static final String SERIALIZED_NAME_LAST_SUCCESSFUL_BUILD = "lastSuccessfulBuild";
  @SerializedName(SERIALIZED_NAME_LAST_SUCCESSFUL_BUILD)
  private FreeStyleBuild lastSuccessfulBuild;

  public static final String SERIALIZED_NAME_LAST_UNSTABLE_BUILD = "lastUnstableBuild";
  @SerializedName(SERIALIZED_NAME_LAST_UNSTABLE_BUILD)
  private String lastUnstableBuild;

  public static final String SERIALIZED_NAME_LAST_UNSUCCESSFUL_BUILD = "lastUnsuccessfulBuild";
  @SerializedName(SERIALIZED_NAME_LAST_UNSUCCESSFUL_BUILD)
  private String lastUnsuccessfulBuild;

  public static final String SERIALIZED_NAME_NEXT_BUILD_NUMBER = "nextBuildNumber";
  @SerializedName(SERIALIZED_NAME_NEXT_BUILD_NUMBER)
  private Integer nextBuildNumber;

  public static final String SERIALIZED_NAME_QUEUE_ITEM = "queueItem";
  @SerializedName(SERIALIZED_NAME_QUEUE_ITEM)
  private String queueItem;

  public static final String SERIALIZED_NAME_CONCURRENT_BUILD = "concurrentBuild";
  @SerializedName(SERIALIZED_NAME_CONCURRENT_BUILD)
  private Boolean concurrentBuild;

  public static final String SERIALIZED_NAME_SCM = "scm";
  @SerializedName(SERIALIZED_NAME_SCM)
  private NullSCM scm;

  public FreeStyleProject() { 
  }

  public FreeStyleProject propertyClass(String propertyClass) {
    
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Get propertyClass
   * @return propertyClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPropertyClass() {
    return propertyClass;
  }


  public void setPropertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
  }


  public FreeStyleProject name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public FreeStyleProject url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public FreeStyleProject color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


  public FreeStyleProject actions(List<FreeStyleProjectactions> actions) {
    
    this.actions = actions;
    return this;
  }

  public FreeStyleProject addActionsItem(FreeStyleProjectactions actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FreeStyleProjectactions> getActions() {
    return actions;
  }


  public void setActions(List<FreeStyleProjectactions> actions) {
    this.actions = actions;
  }


  public FreeStyleProject description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public FreeStyleProject displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public FreeStyleProject displayNameOrNull(String displayNameOrNull) {
    
    this.displayNameOrNull = displayNameOrNull;
    return this;
  }

   /**
   * Get displayNameOrNull
   * @return displayNameOrNull
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayNameOrNull() {
    return displayNameOrNull;
  }


  public void setDisplayNameOrNull(String displayNameOrNull) {
    this.displayNameOrNull = displayNameOrNull;
  }


  public FreeStyleProject fullDisplayName(String fullDisplayName) {
    
    this.fullDisplayName = fullDisplayName;
    return this;
  }

   /**
   * Get fullDisplayName
   * @return fullDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullDisplayName() {
    return fullDisplayName;
  }


  public void setFullDisplayName(String fullDisplayName) {
    this.fullDisplayName = fullDisplayName;
  }


  public FreeStyleProject fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public FreeStyleProject buildable(Boolean buildable) {
    
    this.buildable = buildable;
    return this;
  }

   /**
   * Get buildable
   * @return buildable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBuildable() {
    return buildable;
  }


  public void setBuildable(Boolean buildable) {
    this.buildable = buildable;
  }


  public FreeStyleProject builds(List<FreeStyleBuild> builds) {
    
    this.builds = builds;
    return this;
  }

  public FreeStyleProject addBuildsItem(FreeStyleBuild buildsItem) {
    if (this.builds == null) {
      this.builds = new ArrayList<>();
    }
    this.builds.add(buildsItem);
    return this;
  }

   /**
   * Get builds
   * @return builds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FreeStyleBuild> getBuilds() {
    return builds;
  }


  public void setBuilds(List<FreeStyleBuild> builds) {
    this.builds = builds;
  }


  public FreeStyleProject firstBuild(FreeStyleBuild firstBuild) {
    
    this.firstBuild = firstBuild;
    return this;
  }

   /**
   * Get firstBuild
   * @return firstBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FreeStyleBuild getFirstBuild() {
    return firstBuild;
  }


  public void setFirstBuild(FreeStyleBuild firstBuild) {
    this.firstBuild = firstBuild;
  }


  public FreeStyleProject healthReport(List<FreeStyleProjecthealthReport> healthReport) {
    
    this.healthReport = healthReport;
    return this;
  }

  public FreeStyleProject addHealthReportItem(FreeStyleProjecthealthReport healthReportItem) {
    if (this.healthReport == null) {
      this.healthReport = new ArrayList<>();
    }
    this.healthReport.add(healthReportItem);
    return this;
  }

   /**
   * Get healthReport
   * @return healthReport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FreeStyleProjecthealthReport> getHealthReport() {
    return healthReport;
  }


  public void setHealthReport(List<FreeStyleProjecthealthReport> healthReport) {
    this.healthReport = healthReport;
  }


  public FreeStyleProject inQueue(Boolean inQueue) {
    
    this.inQueue = inQueue;
    return this;
  }

   /**
   * Get inQueue
   * @return inQueue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInQueue() {
    return inQueue;
  }


  public void setInQueue(Boolean inQueue) {
    this.inQueue = inQueue;
  }


  public FreeStyleProject keepDependencies(Boolean keepDependencies) {
    
    this.keepDependencies = keepDependencies;
    return this;
  }

   /**
   * Get keepDependencies
   * @return keepDependencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeepDependencies() {
    return keepDependencies;
  }


  public void setKeepDependencies(Boolean keepDependencies) {
    this.keepDependencies = keepDependencies;
  }


  public FreeStyleProject lastBuild(FreeStyleBuild lastBuild) {
    
    this.lastBuild = lastBuild;
    return this;
  }

   /**
   * Get lastBuild
   * @return lastBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FreeStyleBuild getLastBuild() {
    return lastBuild;
  }


  public void setLastBuild(FreeStyleBuild lastBuild) {
    this.lastBuild = lastBuild;
  }


  public FreeStyleProject lastCompletedBuild(FreeStyleBuild lastCompletedBuild) {
    
    this.lastCompletedBuild = lastCompletedBuild;
    return this;
  }

   /**
   * Get lastCompletedBuild
   * @return lastCompletedBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FreeStyleBuild getLastCompletedBuild() {
    return lastCompletedBuild;
  }


  public void setLastCompletedBuild(FreeStyleBuild lastCompletedBuild) {
    this.lastCompletedBuild = lastCompletedBuild;
  }


  public FreeStyleProject lastFailedBuild(String lastFailedBuild) {
    
    this.lastFailedBuild = lastFailedBuild;
    return this;
  }

   /**
   * Get lastFailedBuild
   * @return lastFailedBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastFailedBuild() {
    return lastFailedBuild;
  }


  public void setLastFailedBuild(String lastFailedBuild) {
    this.lastFailedBuild = lastFailedBuild;
  }


  public FreeStyleProject lastStableBuild(FreeStyleBuild lastStableBuild) {
    
    this.lastStableBuild = lastStableBuild;
    return this;
  }

   /**
   * Get lastStableBuild
   * @return lastStableBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FreeStyleBuild getLastStableBuild() {
    return lastStableBuild;
  }


  public void setLastStableBuild(FreeStyleBuild lastStableBuild) {
    this.lastStableBuild = lastStableBuild;
  }


  public FreeStyleProject lastSuccessfulBuild(FreeStyleBuild lastSuccessfulBuild) {
    
    this.lastSuccessfulBuild = lastSuccessfulBuild;
    return this;
  }

   /**
   * Get lastSuccessfulBuild
   * @return lastSuccessfulBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FreeStyleBuild getLastSuccessfulBuild() {
    return lastSuccessfulBuild;
  }


  public void setLastSuccessfulBuild(FreeStyleBuild lastSuccessfulBuild) {
    this.lastSuccessfulBuild = lastSuccessfulBuild;
  }


  public FreeStyleProject lastUnstableBuild(String lastUnstableBuild) {
    
    this.lastUnstableBuild = lastUnstableBuild;
    return this;
  }

   /**
   * Get lastUnstableBuild
   * @return lastUnstableBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastUnstableBuild() {
    return lastUnstableBuild;
  }


  public void setLastUnstableBuild(String lastUnstableBuild) {
    this.lastUnstableBuild = lastUnstableBuild;
  }


  public FreeStyleProject lastUnsuccessfulBuild(String lastUnsuccessfulBuild) {
    
    this.lastUnsuccessfulBuild = lastUnsuccessfulBuild;
    return this;
  }

   /**
   * Get lastUnsuccessfulBuild
   * @return lastUnsuccessfulBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastUnsuccessfulBuild() {
    return lastUnsuccessfulBuild;
  }


  public void setLastUnsuccessfulBuild(String lastUnsuccessfulBuild) {
    this.lastUnsuccessfulBuild = lastUnsuccessfulBuild;
  }


  public FreeStyleProject nextBuildNumber(Integer nextBuildNumber) {
    
    this.nextBuildNumber = nextBuildNumber;
    return this;
  }

   /**
   * Get nextBuildNumber
   * @return nextBuildNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNextBuildNumber() {
    return nextBuildNumber;
  }


  public void setNextBuildNumber(Integer nextBuildNumber) {
    this.nextBuildNumber = nextBuildNumber;
  }


  public FreeStyleProject queueItem(String queueItem) {
    
    this.queueItem = queueItem;
    return this;
  }

   /**
   * Get queueItem
   * @return queueItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQueueItem() {
    return queueItem;
  }


  public void setQueueItem(String queueItem) {
    this.queueItem = queueItem;
  }


  public FreeStyleProject concurrentBuild(Boolean concurrentBuild) {
    
    this.concurrentBuild = concurrentBuild;
    return this;
  }

   /**
   * Get concurrentBuild
   * @return concurrentBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getConcurrentBuild() {
    return concurrentBuild;
  }


  public void setConcurrentBuild(Boolean concurrentBuild) {
    this.concurrentBuild = concurrentBuild;
  }


  public FreeStyleProject scm(NullSCM scm) {
    
    this.scm = scm;
    return this;
  }

   /**
   * Get scm
   * @return scm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NullSCM getScm() {
    return scm;
  }


  public void setScm(NullSCM scm) {
    this.scm = scm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreeStyleProject freeStyleProject = (FreeStyleProject) o;
    return Objects.equals(this.propertyClass, freeStyleProject.propertyClass) &&
        Objects.equals(this.name, freeStyleProject.name) &&
        Objects.equals(this.url, freeStyleProject.url) &&
        Objects.equals(this.color, freeStyleProject.color) &&
        Objects.equals(this.actions, freeStyleProject.actions) &&
        Objects.equals(this.description, freeStyleProject.description) &&
        Objects.equals(this.displayName, freeStyleProject.displayName) &&
        Objects.equals(this.displayNameOrNull, freeStyleProject.displayNameOrNull) &&
        Objects.equals(this.fullDisplayName, freeStyleProject.fullDisplayName) &&
        Objects.equals(this.fullName, freeStyleProject.fullName) &&
        Objects.equals(this.buildable, freeStyleProject.buildable) &&
        Objects.equals(this.builds, freeStyleProject.builds) &&
        Objects.equals(this.firstBuild, freeStyleProject.firstBuild) &&
        Objects.equals(this.healthReport, freeStyleProject.healthReport) &&
        Objects.equals(this.inQueue, freeStyleProject.inQueue) &&
        Objects.equals(this.keepDependencies, freeStyleProject.keepDependencies) &&
        Objects.equals(this.lastBuild, freeStyleProject.lastBuild) &&
        Objects.equals(this.lastCompletedBuild, freeStyleProject.lastCompletedBuild) &&
        Objects.equals(this.lastFailedBuild, freeStyleProject.lastFailedBuild) &&
        Objects.equals(this.lastStableBuild, freeStyleProject.lastStableBuild) &&
        Objects.equals(this.lastSuccessfulBuild, freeStyleProject.lastSuccessfulBuild) &&
        Objects.equals(this.lastUnstableBuild, freeStyleProject.lastUnstableBuild) &&
        Objects.equals(this.lastUnsuccessfulBuild, freeStyleProject.lastUnsuccessfulBuild) &&
        Objects.equals(this.nextBuildNumber, freeStyleProject.nextBuildNumber) &&
        Objects.equals(this.queueItem, freeStyleProject.queueItem) &&
        Objects.equals(this.concurrentBuild, freeStyleProject.concurrentBuild) &&
        Objects.equals(this.scm, freeStyleProject.scm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyClass, name, url, color, actions, description, displayName, displayNameOrNull, fullDisplayName, fullName, buildable, builds, firstBuild, healthReport, inQueue, keepDependencies, lastBuild, lastCompletedBuild, lastFailedBuild, lastStableBuild, lastSuccessfulBuild, lastUnstableBuild, lastUnsuccessfulBuild, nextBuildNumber, queueItem, concurrentBuild, scm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreeStyleProject {\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayNameOrNull: ").append(toIndentedString(displayNameOrNull)).append("\n");
    sb.append("    fullDisplayName: ").append(toIndentedString(fullDisplayName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    buildable: ").append(toIndentedString(buildable)).append("\n");
    sb.append("    builds: ").append(toIndentedString(builds)).append("\n");
    sb.append("    firstBuild: ").append(toIndentedString(firstBuild)).append("\n");
    sb.append("    healthReport: ").append(toIndentedString(healthReport)).append("\n");
    sb.append("    inQueue: ").append(toIndentedString(inQueue)).append("\n");
    sb.append("    keepDependencies: ").append(toIndentedString(keepDependencies)).append("\n");
    sb.append("    lastBuild: ").append(toIndentedString(lastBuild)).append("\n");
    sb.append("    lastCompletedBuild: ").append(toIndentedString(lastCompletedBuild)).append("\n");
    sb.append("    lastFailedBuild: ").append(toIndentedString(lastFailedBuild)).append("\n");
    sb.append("    lastStableBuild: ").append(toIndentedString(lastStableBuild)).append("\n");
    sb.append("    lastSuccessfulBuild: ").append(toIndentedString(lastSuccessfulBuild)).append("\n");
    sb.append("    lastUnstableBuild: ").append(toIndentedString(lastUnstableBuild)).append("\n");
    sb.append("    lastUnsuccessfulBuild: ").append(toIndentedString(lastUnsuccessfulBuild)).append("\n");
    sb.append("    nextBuildNumber: ").append(toIndentedString(nextBuildNumber)).append("\n");
    sb.append("    queueItem: ").append(toIndentedString(queueItem)).append("\n");
    sb.append("    concurrentBuild: ").append(toIndentedString(concurrentBuild)).append("\n");
    sb.append("    scm: ").append(toIndentedString(scm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_class");
    openapiFields.add("name");
    openapiFields.add("url");
    openapiFields.add("color");
    openapiFields.add("actions");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("displayNameOrNull");
    openapiFields.add("fullDisplayName");
    openapiFields.add("fullName");
    openapiFields.add("buildable");
    openapiFields.add("builds");
    openapiFields.add("firstBuild");
    openapiFields.add("healthReport");
    openapiFields.add("inQueue");
    openapiFields.add("keepDependencies");
    openapiFields.add("lastBuild");
    openapiFields.add("lastCompletedBuild");
    openapiFields.add("lastFailedBuild");
    openapiFields.add("lastStableBuild");
    openapiFields.add("lastSuccessfulBuild");
    openapiFields.add("lastUnstableBuild");
    openapiFields.add("lastUnsuccessfulBuild");
    openapiFields.add("nextBuildNumber");
    openapiFields.add("queueItem");
    openapiFields.add("concurrentBuild");
    openapiFields.add("scm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FreeStyleProject
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (FreeStyleProject.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in FreeStyleProject is not found in the empty JSON string", FreeStyleProject.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!FreeStyleProject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FreeStyleProject` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("_class") != null && !jsonObj.get("_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_class").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (jsonObj.get("color") != null && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      JsonArray jsonArrayactions = jsonObj.getAsJsonArray("actions");
      if (jsonArrayactions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("actions").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `actions` to be an array in the JSON string but got `%s`", jsonObj.get("actions").toString()));
        }

        // validate the optional field `actions` (array)
        for (int i = 0; i < jsonArrayactions.size(); i++) {
          FreeStyleProjectactions.validateJsonObject(jsonArrayactions.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if (jsonObj.get("displayNameOrNull") != null && !jsonObj.get("displayNameOrNull").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayNameOrNull` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayNameOrNull").toString()));
      }
      if (jsonObj.get("fullDisplayName") != null && !jsonObj.get("fullDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullDisplayName").toString()));
      }
      if (jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      JsonArray jsonArraybuilds = jsonObj.getAsJsonArray("builds");
      if (jsonArraybuilds != null) {
        // ensure the json data is an array
        if (!jsonObj.get("builds").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `builds` to be an array in the JSON string but got `%s`", jsonObj.get("builds").toString()));
        }

        // validate the optional field `builds` (array)
        for (int i = 0; i < jsonArraybuilds.size(); i++) {
          FreeStyleBuild.validateJsonObject(jsonArraybuilds.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `firstBuild`
      if (jsonObj.getAsJsonObject("firstBuild") != null) {
        FreeStyleBuild.validateJsonObject(jsonObj.getAsJsonObject("firstBuild"));
      }
      JsonArray jsonArrayhealthReport = jsonObj.getAsJsonArray("healthReport");
      if (jsonArrayhealthReport != null) {
        // ensure the json data is an array
        if (!jsonObj.get("healthReport").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `healthReport` to be an array in the JSON string but got `%s`", jsonObj.get("healthReport").toString()));
        }

        // validate the optional field `healthReport` (array)
        for (int i = 0; i < jsonArrayhealthReport.size(); i++) {
          FreeStyleProjecthealthReport.validateJsonObject(jsonArrayhealthReport.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `lastBuild`
      if (jsonObj.getAsJsonObject("lastBuild") != null) {
        FreeStyleBuild.validateJsonObject(jsonObj.getAsJsonObject("lastBuild"));
      }
      // validate the optional field `lastCompletedBuild`
      if (jsonObj.getAsJsonObject("lastCompletedBuild") != null) {
        FreeStyleBuild.validateJsonObject(jsonObj.getAsJsonObject("lastCompletedBuild"));
      }
      if (jsonObj.get("lastFailedBuild") != null && !jsonObj.get("lastFailedBuild").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastFailedBuild` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastFailedBuild").toString()));
      }
      // validate the optional field `lastStableBuild`
      if (jsonObj.getAsJsonObject("lastStableBuild") != null) {
        FreeStyleBuild.validateJsonObject(jsonObj.getAsJsonObject("lastStableBuild"));
      }
      // validate the optional field `lastSuccessfulBuild`
      if (jsonObj.getAsJsonObject("lastSuccessfulBuild") != null) {
        FreeStyleBuild.validateJsonObject(jsonObj.getAsJsonObject("lastSuccessfulBuild"));
      }
      if (jsonObj.get("lastUnstableBuild") != null && !jsonObj.get("lastUnstableBuild").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUnstableBuild` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUnstableBuild").toString()));
      }
      if (jsonObj.get("lastUnsuccessfulBuild") != null && !jsonObj.get("lastUnsuccessfulBuild").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUnsuccessfulBuild` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUnsuccessfulBuild").toString()));
      }
      if (jsonObj.get("queueItem") != null && !jsonObj.get("queueItem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queueItem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queueItem").toString()));
      }
      // validate the optional field `scm`
      if (jsonObj.getAsJsonObject("scm") != null) {
        NullSCM.validateJsonObject(jsonObj.getAsJsonObject("scm"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FreeStyleProject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FreeStyleProject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FreeStyleProject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FreeStyleProject.class));

       return (TypeAdapter<T>) new TypeAdapter<FreeStyleProject>() {
           @Override
           public void write(JsonWriter out, FreeStyleProject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FreeStyleProject read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FreeStyleProject given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FreeStyleProject
  * @throws IOException if the JSON string is invalid with respect to FreeStyleProject
  */
  public static FreeStyleProject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FreeStyleProject.class);
  }

 /**
  * Convert an instance of FreeStyleProject to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

