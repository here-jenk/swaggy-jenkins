//
// GithubContent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GithubContent: Codable, JSONEncodable, Hashable {

    public var name: String?
    public var sha: String?
    public var _class: String?
    public var repo: String?
    public var size: Int?
    public var owner: String?
    public var path: String?
    public var base64Data: String?

    public init(name: String? = nil, sha: String? = nil, _class: String? = nil, repo: String? = nil, size: Int? = nil, owner: String? = nil, path: String? = nil, base64Data: String? = nil) {
        self.name = name
        self.sha = sha
        self._class = _class
        self.repo = repo
        self.size = size
        self.owner = owner
        self.path = path
        self.base64Data = base64Data
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case sha
        case _class
        case repo
        case size
        case owner
        case path
        case base64Data
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(sha, forKey: .sha)
        try container.encodeIfPresent(_class, forKey: ._class)
        try container.encodeIfPresent(repo, forKey: .repo)
        try container.encodeIfPresent(size, forKey: .size)
        try container.encodeIfPresent(owner, forKey: .owner)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(base64Data, forKey: .base64Data)
    }
}

