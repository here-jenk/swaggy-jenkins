# coding: utf-8

"""
    Swaggy Jenkins

    Jenkins API clients generated from Swagger / Open API specification  # noqa: E501

    The version of the OpenAPI document: 1.1.2-pre.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.computer_set import ComputerSet  # noqa: E501
from openapi_client.rest import ApiException

class TestComputerSet(unittest.TestCase):
    """ComputerSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ComputerSet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.computer_set.ComputerSet()  # noqa: E501
        if include_optional :
            return ComputerSet(
                _class = '', 
                busy_executors = 56, 
                computer = [
                    openapi_client.models.hudson_master_computer.HudsonMasterComputer(
                        _class = '', 
                        display_name = '', 
                        executors = [
                            openapi_client.models.hudson_master_computerexecutors.HudsonMasterComputerexecutors(
                                current_executable = openapi_client.models.free_style_build.FreeStyleBuild(
                                    _class = '', 
                                    number = 56, 
                                    url = '', 
                                    actions = [
                                        openapi_client.models.cause_action.CauseAction(
                                            _class = '', 
                                            causes = [
                                                openapi_client.models.cause_user_id_cause.CauseUserIdCause(
                                                    _class = '', 
                                                    short_description = '', 
                                                    user_id = '', 
                                                    user_name = '', )
                                                ], )
                                        ], 
                                    building = True, 
                                    description = '', 
                                    display_name = '', 
                                    duration = 56, 
                                    estimated_duration = 56, 
                                    executor = '', 
                                    full_display_name = '', 
                                    id = '', 
                                    keep_log = True, 
                                    queue_id = 56, 
                                    result = '', 
                                    timestamp = 56, 
                                    built_on = '', 
                                    change_set = openapi_client.models.empty_change_log_set.EmptyChangeLogSet(
                                        _class = '', 
                                        kind = '', ), ), 
                                idle = True, 
                                likely_stuck = True, 
                                number = 56, 
                                progress = 56, 
                                _class = '', )
                            ], 
                        icon = '', 
                        icon_class_name = '', 
                        idle = True, 
                        jnlp_agent = True, 
                        launch_supported = True, 
                        load_statistics = openapi_client.models.label1.Label1(
                            _class = '', ), 
                        manual_launch_allowed = True, 
                        monitor_data = openapi_client.models.hudson_master_computermonitor_data.HudsonMasterComputermonitorData(
                            hudson/node_monitors/swap_space_monitor = openapi_client.models.swap_space_monitor_memory_usage2.SwapSpaceMonitorMemoryUsage2(
                                _class = '', 
                                available_physical_memory = 56, 
                                available_swap_space = 56, 
                                total_physical_memory = 56, 
                                total_swap_space = 56, ), 
                            hudson/node_monitors/temporary_space_monitor = openapi_client.models.disk_space_monitor_descriptor_disk_space.DiskSpaceMonitorDescriptorDiskSpace(
                                _class = '', 
                                timestamp = 56, 
                                path = '', 
                                size = 56, ), 
                            hudson/node_monitors/disk_space_monitor = openapi_client.models.disk_space_monitor_descriptor_disk_space.DiskSpaceMonitorDescriptorDiskSpace(
                                _class = '', 
                                timestamp = 56, 
                                path = '', 
                                size = 56, ), 
                            hudson/node_monitors/architecture_monitor = '', 
                            hudson/node_monitors/response_time_monitor = openapi_client.models.response_time_monitor_data.ResponseTimeMonitorData(
                                _class = '', 
                                timestamp = 56, 
                                average = 56, ), 
                            hudson/node_monitors/clock_monitor = openapi_client.models.clock_difference.ClockDifference(
                                _class = '', 
                                diff = 56, ), 
                            _class = '', ), 
                        num_executors = 56, 
                        offline = True, 
                        offline_cause = '', 
                        offline_cause_reason = '', 
                        temporarily_offline = True, )
                    ], 
                display_name = '', 
                total_executors = 56
            )
        else :
            return ComputerSet(
        )

    def testComputerSet(self):
        """Test ComputerSet"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
