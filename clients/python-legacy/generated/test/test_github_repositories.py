# coding: utf-8

"""
    Swaggy Jenkins

    Jenkins API clients generated from Swagger / Open API specification  # noqa: E501

    The version of the OpenAPI document: 1.5.1-pre.0
    Contact: blah@cliffano.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.github_repositories import GithubRepositories  # noqa: E501
from openapi_client.rest import ApiException

class TestGithubRepositories(unittest.TestCase):
    """GithubRepositories unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GithubRepositories
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.github_repositories.GithubRepositories()  # noqa: E501
        if include_optional :
            return GithubRepositories(
                _class = '', 
                links = openapi_client.models.github_repositorieslinks.GithubRepositorieslinks(
                    self = openapi_client.models.link.Link(
                        _class = '', 
                        href = '', ), 
                    _class = '', ), 
                items = [
                    openapi_client.models.github_repository.GithubRepository(
                        _class = '', 
                        _links = openapi_client.models.github_repositorylinks.GithubRepositorylinks(
                            self = openapi_client.models.link.Link(
                                _class = '', 
                                href = '', ), 
                            _class = '', ), 
                        default_branch = '', 
                        description = '', 
                        name = '', 
                        permissions = openapi_client.models.github_repositorypermissions.GithubRepositorypermissions(
                            admin = True, 
                            push = True, 
                            pull = True, 
                            _class = '', ), 
                        private = True, 
                        full_name = '', )
                    ], 
                last_page = 56, 
                next_page = 56, 
                page_size = 56
            )
        else :
            return GithubRepositories(
        )

    def testGithubRepositories(self):
        """Test GithubRepositories"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
