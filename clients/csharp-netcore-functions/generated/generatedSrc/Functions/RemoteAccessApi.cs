/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.2-pre.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;

namespace Org.OpenAPITools.Apis
{ 
    public partial class RemoteAccessApi
    { 
        [FunctionName("RemoteAccessApi_GetComputer")]
        public async Task<IActionResult> _GetComputer([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/computer/api/json")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetComputer");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetJenkins")]
        public async Task<IActionResult> _GetJenkins([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/api/json")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetJenkins");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetJob")]
        public async Task<IActionResult> _GetJob([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/job/{name}/api/json")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("GetJob");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetJobConfig")]
        public async Task<IActionResult> _GetJobConfig([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/job/{name}/config.xml")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("GetJobConfig");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetJobLastBuild")]
        public async Task<IActionResult> _GetJobLastBuild([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/job/{name}/lastBuild/api/json")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("GetJobLastBuild");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetJobProgressiveText")]
        public async Task<IActionResult> _GetJobProgressiveText([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/job/{name}/{number}/logText/progressiveText")]HttpRequest req, ExecutionContext context, string name, string number)
        {
            var method = this.GetType().GetMethod("GetJobProgressiveText");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context, ,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetQueue")]
        public async Task<IActionResult> _GetQueue([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/queue/api/json")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("GetQueue");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetQueueItem")]
        public async Task<IActionResult> _GetQueueItem([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/queue/item/{number}/api/json")]HttpRequest req, ExecutionContext context, string number)
        {
            var method = this.GetType().GetMethod("GetQueueItem");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetView")]
        public async Task<IActionResult> _GetView([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/view/{name}/api/json")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("GetView");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_GetViewConfig")]
        public async Task<IActionResult> _GetViewConfig([HttpTrigger(AuthorizationLevel.Anonymous, "GET", Route = "/view/{name}/config.xml")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("GetViewConfig");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_HeadJenkins")]
        public async Task<IActionResult> _HeadJenkins([HttpTrigger(AuthorizationLevel.Anonymous, "HEAD", Route = "/api/json")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("HeadJenkins");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostCreateItem")]
        public async Task<IActionResult> _PostCreateItem([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/createItem")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("PostCreateItem");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostCreateView")]
        public async Task<IActionResult> _PostCreateView([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/createView")]HttpRequest req, ExecutionContext context)
        {
            var method = this.GetType().GetMethod("PostCreateView");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobBuild")]
        public async Task<IActionResult> _PostJobBuild([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/build")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobBuild");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobConfig")]
        public async Task<IActionResult> _PostJobConfig([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/config.xml")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobConfig");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobDelete")]
        public async Task<IActionResult> _PostJobDelete([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/doDelete")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobDelete");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobDisable")]
        public async Task<IActionResult> _PostJobDisable([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/disable")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobDisable");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobEnable")]
        public async Task<IActionResult> _PostJobEnable([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/enable")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobEnable");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostJobLastBuildStop")]
        public async Task<IActionResult> _PostJobLastBuildStop([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/job/{name}/lastBuild/stop")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostJobLastBuildStop");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }

        [FunctionName("RemoteAccessApi_PostViewConfig")]
        public async Task<IActionResult> _PostViewConfig([HttpTrigger(AuthorizationLevel.Anonymous, "POST", Route = "/view/{name}/config.xml")]HttpRequest req, ExecutionContext context, string name)
        {
            var method = this.GetType().GetMethod("PostViewConfig");

            return method != null 
                ? (await ((Task<IActionResult>)method.Invoke(this, new object[] { req, context,  })).ConfigureAwait(false))
                : new StatusCodeResult((int)HttpStatusCode.NotImplemented);
        }
    }
}

