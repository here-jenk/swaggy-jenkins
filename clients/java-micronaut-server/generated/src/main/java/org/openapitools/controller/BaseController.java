/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.2-pre.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.controller;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import org.openapitools.model.DefaultCrumbIssuer;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.annotations.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-02-11T12:41:40.232851Z[Etc/UTC]")
@Controller("${context-path}")
public class BaseController {
    /**
     * Retrieve CSRF protection token
     *
     * @return DefaultCrumbIssuer
     */
    @ApiOperation(
        value = "",
        nickname = "getCrumb",
        notes = "Retrieve CSRF protection token",
        response = DefaultCrumbIssuer.class,
        authorizations = {
            @Authorization(value = "jenkins_auth")
        },
        tags={})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Successfully retrieved CSRF protection token", response = DefaultCrumbIssuer.class),
        @ApiResponse(code = 401, message = "Authentication failed - incorrect username and/or password"),
        @ApiResponse(code = 403, message = "Jenkins requires authentication - please set username and password")})
    @Get(uri="/crumbIssuer/api/json")
    @Produces(value = {"application/json"})
    @Secured(SecurityRule.IS_AUTHENTICATED)
    public Mono<DefaultCrumbIssuer> getCrumb() {
        // TODO implement getCrumb() body;
        Mono<DefaultCrumbIssuer> result = Mono.empty();
        return result;
    }
}
