/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * The version of the OpenAPI document: 1.1.2-pre.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DefaultCrumbIssuer
    /// </summary>
    [DataContract]
    public partial class DefaultCrumbIssuer :  IEquatable<DefaultCrumbIssuer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultCrumbIssuer" /> class.
        /// </summary>
        /// <param name="_class">_class.</param>
        /// <param name="crumb">crumb.</param>
        /// <param name="crumbRequestField">crumbRequestField.</param>
        public DefaultCrumbIssuer(string _class = default(string), string crumb = default(string), string crumbRequestField = default(string))
        {
            this.Class = _class;
            this.Crumb = crumb;
            this.CrumbRequestField = crumbRequestField;
        }

        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="_class", EmitDefaultValue=false)]
        public string Class { get; set; }

        /// <summary>
        /// Gets or Sets Crumb
        /// </summary>
        [DataMember(Name="crumb", EmitDefaultValue=false)]
        public string Crumb { get; set; }

        /// <summary>
        /// Gets or Sets CrumbRequestField
        /// </summary>
        [DataMember(Name="crumbRequestField", EmitDefaultValue=false)]
        public string CrumbRequestField { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DefaultCrumbIssuer {\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("  Crumb: ").Append(Crumb).Append("\n");
            sb.Append("  CrumbRequestField: ").Append(CrumbRequestField).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DefaultCrumbIssuer);
        }

        /// <summary>
        /// Returns true if DefaultCrumbIssuer instances are equal
        /// </summary>
        /// <param name="input">Instance of DefaultCrumbIssuer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DefaultCrumbIssuer input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Class == input.Class ||
                    (this.Class != null &&
                    this.Class.Equals(input.Class))
                ) && 
                (
                    this.Crumb == input.Crumb ||
                    (this.Crumb != null &&
                    this.Crumb.Equals(input.Crumb))
                ) && 
                (
                    this.CrumbRequestField == input.CrumbRequestField ||
                    (this.CrumbRequestField != null &&
                    this.CrumbRequestField.Equals(input.CrumbRequestField))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Class != null)
                    hashCode = hashCode * 59 + this.Class.GetHashCode();
                if (this.Crumb != null)
                    hashCode = hashCode * 59 + this.Crumb.GetHashCode();
                if (this.CrumbRequestField != null)
                    hashCode = hashCode * 59 + this.CrumbRequestField.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
