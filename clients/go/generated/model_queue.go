/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 1.1.1
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Queue struct for Queue
type Queue struct {
	Class *string `json:"_class,omitempty"`
	Items []QueueBlockedItem `json:"items,omitempty"`
}

// NewQueue instantiates a new Queue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueue() *Queue {
	this := Queue{}
	return &this
}

// NewQueueWithDefaults instantiates a new Queue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueWithDefaults() *Queue {
	this := Queue{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Queue) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Queue) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *Queue) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Queue) SetClass(v string) {
	o.Class = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *Queue) GetItems() []QueueBlockedItem {
	if o == nil || o.Items == nil {
		var ret []QueueBlockedItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Queue) GetItemsOk() ([]QueueBlockedItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *Queue) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []QueueBlockedItem and assigns it to the Items field.
func (o *Queue) SetItems(v []QueueBlockedItem) {
	o.Items = v
}

func (o Queue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Class != nil {
		toSerialize["_class"] = o.Class
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableQueue struct {
	value *Queue
	isSet bool
}

func (v NullableQueue) Get() *Queue {
	return v.value
}

func (v *NullableQueue) Set(val *Queue) {
	v.value = val
	v.isSet = true
}

func (v NullableQueue) IsSet() bool {
	return v.isSet
}

func (v *NullableQueue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueue(val *Queue) *NullableQueue {
	return &NullableQueue{value: val, isSet: true}
}

func (v NullableQueue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


