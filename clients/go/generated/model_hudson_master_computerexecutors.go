/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 1.1.2-pre.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HudsonMasterComputerexecutors struct for HudsonMasterComputerexecutors
type HudsonMasterComputerexecutors struct {
	CurrentExecutable *FreeStyleBuild `json:"currentExecutable,omitempty"`
	Idle *bool `json:"idle,omitempty"`
	LikelyStuck *bool `json:"likelyStuck,omitempty"`
	Number *int32 `json:"number,omitempty"`
	Progress *int32 `json:"progress,omitempty"`
	Class *string `json:"_class,omitempty"`
}

// NewHudsonMasterComputerexecutors instantiates a new HudsonMasterComputerexecutors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHudsonMasterComputerexecutors() *HudsonMasterComputerexecutors {
	this := HudsonMasterComputerexecutors{}
	return &this
}

// NewHudsonMasterComputerexecutorsWithDefaults instantiates a new HudsonMasterComputerexecutors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHudsonMasterComputerexecutorsWithDefaults() *HudsonMasterComputerexecutors {
	this := HudsonMasterComputerexecutors{}
	return &this
}

// GetCurrentExecutable returns the CurrentExecutable field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetCurrentExecutable() FreeStyleBuild {
	if o == nil || o.CurrentExecutable == nil {
		var ret FreeStyleBuild
		return ret
	}
	return *o.CurrentExecutable
}

// GetCurrentExecutableOk returns a tuple with the CurrentExecutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetCurrentExecutableOk() (*FreeStyleBuild, bool) {
	if o == nil || o.CurrentExecutable == nil {
		return nil, false
	}
	return o.CurrentExecutable, true
}

// HasCurrentExecutable returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasCurrentExecutable() bool {
	if o != nil && o.CurrentExecutable != nil {
		return true
	}

	return false
}

// SetCurrentExecutable gets a reference to the given FreeStyleBuild and assigns it to the CurrentExecutable field.
func (o *HudsonMasterComputerexecutors) SetCurrentExecutable(v FreeStyleBuild) {
	o.CurrentExecutable = &v
}

// GetIdle returns the Idle field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetIdle() bool {
	if o == nil || o.Idle == nil {
		var ret bool
		return ret
	}
	return *o.Idle
}

// GetIdleOk returns a tuple with the Idle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetIdleOk() (*bool, bool) {
	if o == nil || o.Idle == nil {
		return nil, false
	}
	return o.Idle, true
}

// HasIdle returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasIdle() bool {
	if o != nil && o.Idle != nil {
		return true
	}

	return false
}

// SetIdle gets a reference to the given bool and assigns it to the Idle field.
func (o *HudsonMasterComputerexecutors) SetIdle(v bool) {
	o.Idle = &v
}

// GetLikelyStuck returns the LikelyStuck field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetLikelyStuck() bool {
	if o == nil || o.LikelyStuck == nil {
		var ret bool
		return ret
	}
	return *o.LikelyStuck
}

// GetLikelyStuckOk returns a tuple with the LikelyStuck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetLikelyStuckOk() (*bool, bool) {
	if o == nil || o.LikelyStuck == nil {
		return nil, false
	}
	return o.LikelyStuck, true
}

// HasLikelyStuck returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasLikelyStuck() bool {
	if o != nil && o.LikelyStuck != nil {
		return true
	}

	return false
}

// SetLikelyStuck gets a reference to the given bool and assigns it to the LikelyStuck field.
func (o *HudsonMasterComputerexecutors) SetLikelyStuck(v bool) {
	o.LikelyStuck = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetNumber() int32 {
	if o == nil || o.Number == nil {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetNumberOk() (*int32, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *HudsonMasterComputerexecutors) SetNumber(v int32) {
	o.Number = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetProgress() int32 {
	if o == nil || o.Progress == nil {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetProgressOk() (*int32, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *HudsonMasterComputerexecutors) SetProgress(v int32) {
	o.Progress = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *HudsonMasterComputerexecutors) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputerexecutors) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *HudsonMasterComputerexecutors) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *HudsonMasterComputerexecutors) SetClass(v string) {
	o.Class = &v
}

func (o HudsonMasterComputerexecutors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentExecutable != nil {
		toSerialize["currentExecutable"] = o.CurrentExecutable
	}
	if o.Idle != nil {
		toSerialize["idle"] = o.Idle
	}
	if o.LikelyStuck != nil {
		toSerialize["likelyStuck"] = o.LikelyStuck
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.Class != nil {
		toSerialize["_class"] = o.Class
	}
	return json.Marshal(toSerialize)
}

type NullableHudsonMasterComputerexecutors struct {
	value *HudsonMasterComputerexecutors
	isSet bool
}

func (v NullableHudsonMasterComputerexecutors) Get() *HudsonMasterComputerexecutors {
	return v.value
}

func (v *NullableHudsonMasterComputerexecutors) Set(val *HudsonMasterComputerexecutors) {
	v.value = val
	v.isSet = true
}

func (v NullableHudsonMasterComputerexecutors) IsSet() bool {
	return v.isSet
}

func (v *NullableHudsonMasterComputerexecutors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHudsonMasterComputerexecutors(val *HudsonMasterComputerexecutors) *NullableHudsonMasterComputerexecutors {
	return &NullableHudsonMasterComputerexecutors{value: val, isSet: true}
}

func (v NullableHudsonMasterComputerexecutors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHudsonMasterComputerexecutors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


