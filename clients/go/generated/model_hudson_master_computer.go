/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 1.1.2-pre.0
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HudsonMasterComputer struct for HudsonMasterComputer
type HudsonMasterComputer struct {
	Class *string `json:"_class,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Executors []HudsonMasterComputerexecutors `json:"executors,omitempty"`
	Icon *string `json:"icon,omitempty"`
	IconClassName *string `json:"iconClassName,omitempty"`
	Idle *bool `json:"idle,omitempty"`
	JnlpAgent *bool `json:"jnlpAgent,omitempty"`
	LaunchSupported *bool `json:"launchSupported,omitempty"`
	LoadStatistics *Label1 `json:"loadStatistics,omitempty"`
	ManualLaunchAllowed *bool `json:"manualLaunchAllowed,omitempty"`
	MonitorData *HudsonMasterComputermonitorData `json:"monitorData,omitempty"`
	NumExecutors *int32 `json:"numExecutors,omitempty"`
	Offline *bool `json:"offline,omitempty"`
	OfflineCause *string `json:"offlineCause,omitempty"`
	OfflineCauseReason *string `json:"offlineCauseReason,omitempty"`
	TemporarilyOffline *bool `json:"temporarilyOffline,omitempty"`
}

// NewHudsonMasterComputer instantiates a new HudsonMasterComputer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHudsonMasterComputer() *HudsonMasterComputer {
	this := HudsonMasterComputer{}
	return &this
}

// NewHudsonMasterComputerWithDefaults instantiates a new HudsonMasterComputer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHudsonMasterComputerWithDefaults() *HudsonMasterComputer {
	this := HudsonMasterComputer{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *HudsonMasterComputer) SetClass(v string) {
	o.Class = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *HudsonMasterComputer) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExecutors returns the Executors field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetExecutors() []HudsonMasterComputerexecutors {
	if o == nil || o.Executors == nil {
		var ret []HudsonMasterComputerexecutors
		return ret
	}
	return o.Executors
}

// GetExecutorsOk returns a tuple with the Executors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetExecutorsOk() ([]HudsonMasterComputerexecutors, bool) {
	if o == nil || o.Executors == nil {
		return nil, false
	}
	return o.Executors, true
}

// HasExecutors returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasExecutors() bool {
	if o != nil && o.Executors != nil {
		return true
	}

	return false
}

// SetExecutors gets a reference to the given []HudsonMasterComputerexecutors and assigns it to the Executors field.
func (o *HudsonMasterComputer) SetExecutors(v []HudsonMasterComputerexecutors) {
	o.Executors = v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *HudsonMasterComputer) SetIcon(v string) {
	o.Icon = &v
}

// GetIconClassName returns the IconClassName field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetIconClassName() string {
	if o == nil || o.IconClassName == nil {
		var ret string
		return ret
	}
	return *o.IconClassName
}

// GetIconClassNameOk returns a tuple with the IconClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetIconClassNameOk() (*string, bool) {
	if o == nil || o.IconClassName == nil {
		return nil, false
	}
	return o.IconClassName, true
}

// HasIconClassName returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasIconClassName() bool {
	if o != nil && o.IconClassName != nil {
		return true
	}

	return false
}

// SetIconClassName gets a reference to the given string and assigns it to the IconClassName field.
func (o *HudsonMasterComputer) SetIconClassName(v string) {
	o.IconClassName = &v
}

// GetIdle returns the Idle field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetIdle() bool {
	if o == nil || o.Idle == nil {
		var ret bool
		return ret
	}
	return *o.Idle
}

// GetIdleOk returns a tuple with the Idle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetIdleOk() (*bool, bool) {
	if o == nil || o.Idle == nil {
		return nil, false
	}
	return o.Idle, true
}

// HasIdle returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasIdle() bool {
	if o != nil && o.Idle != nil {
		return true
	}

	return false
}

// SetIdle gets a reference to the given bool and assigns it to the Idle field.
func (o *HudsonMasterComputer) SetIdle(v bool) {
	o.Idle = &v
}

// GetJnlpAgent returns the JnlpAgent field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetJnlpAgent() bool {
	if o == nil || o.JnlpAgent == nil {
		var ret bool
		return ret
	}
	return *o.JnlpAgent
}

// GetJnlpAgentOk returns a tuple with the JnlpAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetJnlpAgentOk() (*bool, bool) {
	if o == nil || o.JnlpAgent == nil {
		return nil, false
	}
	return o.JnlpAgent, true
}

// HasJnlpAgent returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasJnlpAgent() bool {
	if o != nil && o.JnlpAgent != nil {
		return true
	}

	return false
}

// SetJnlpAgent gets a reference to the given bool and assigns it to the JnlpAgent field.
func (o *HudsonMasterComputer) SetJnlpAgent(v bool) {
	o.JnlpAgent = &v
}

// GetLaunchSupported returns the LaunchSupported field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetLaunchSupported() bool {
	if o == nil || o.LaunchSupported == nil {
		var ret bool
		return ret
	}
	return *o.LaunchSupported
}

// GetLaunchSupportedOk returns a tuple with the LaunchSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetLaunchSupportedOk() (*bool, bool) {
	if o == nil || o.LaunchSupported == nil {
		return nil, false
	}
	return o.LaunchSupported, true
}

// HasLaunchSupported returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasLaunchSupported() bool {
	if o != nil && o.LaunchSupported != nil {
		return true
	}

	return false
}

// SetLaunchSupported gets a reference to the given bool and assigns it to the LaunchSupported field.
func (o *HudsonMasterComputer) SetLaunchSupported(v bool) {
	o.LaunchSupported = &v
}

// GetLoadStatistics returns the LoadStatistics field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetLoadStatistics() Label1 {
	if o == nil || o.LoadStatistics == nil {
		var ret Label1
		return ret
	}
	return *o.LoadStatistics
}

// GetLoadStatisticsOk returns a tuple with the LoadStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetLoadStatisticsOk() (*Label1, bool) {
	if o == nil || o.LoadStatistics == nil {
		return nil, false
	}
	return o.LoadStatistics, true
}

// HasLoadStatistics returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasLoadStatistics() bool {
	if o != nil && o.LoadStatistics != nil {
		return true
	}

	return false
}

// SetLoadStatistics gets a reference to the given Label1 and assigns it to the LoadStatistics field.
func (o *HudsonMasterComputer) SetLoadStatistics(v Label1) {
	o.LoadStatistics = &v
}

// GetManualLaunchAllowed returns the ManualLaunchAllowed field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetManualLaunchAllowed() bool {
	if o == nil || o.ManualLaunchAllowed == nil {
		var ret bool
		return ret
	}
	return *o.ManualLaunchAllowed
}

// GetManualLaunchAllowedOk returns a tuple with the ManualLaunchAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetManualLaunchAllowedOk() (*bool, bool) {
	if o == nil || o.ManualLaunchAllowed == nil {
		return nil, false
	}
	return o.ManualLaunchAllowed, true
}

// HasManualLaunchAllowed returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasManualLaunchAllowed() bool {
	if o != nil && o.ManualLaunchAllowed != nil {
		return true
	}

	return false
}

// SetManualLaunchAllowed gets a reference to the given bool and assigns it to the ManualLaunchAllowed field.
func (o *HudsonMasterComputer) SetManualLaunchAllowed(v bool) {
	o.ManualLaunchAllowed = &v
}

// GetMonitorData returns the MonitorData field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetMonitorData() HudsonMasterComputermonitorData {
	if o == nil || o.MonitorData == nil {
		var ret HudsonMasterComputermonitorData
		return ret
	}
	return *o.MonitorData
}

// GetMonitorDataOk returns a tuple with the MonitorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetMonitorDataOk() (*HudsonMasterComputermonitorData, bool) {
	if o == nil || o.MonitorData == nil {
		return nil, false
	}
	return o.MonitorData, true
}

// HasMonitorData returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasMonitorData() bool {
	if o != nil && o.MonitorData != nil {
		return true
	}

	return false
}

// SetMonitorData gets a reference to the given HudsonMasterComputermonitorData and assigns it to the MonitorData field.
func (o *HudsonMasterComputer) SetMonitorData(v HudsonMasterComputermonitorData) {
	o.MonitorData = &v
}

// GetNumExecutors returns the NumExecutors field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetNumExecutors() int32 {
	if o == nil || o.NumExecutors == nil {
		var ret int32
		return ret
	}
	return *o.NumExecutors
}

// GetNumExecutorsOk returns a tuple with the NumExecutors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetNumExecutorsOk() (*int32, bool) {
	if o == nil || o.NumExecutors == nil {
		return nil, false
	}
	return o.NumExecutors, true
}

// HasNumExecutors returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasNumExecutors() bool {
	if o != nil && o.NumExecutors != nil {
		return true
	}

	return false
}

// SetNumExecutors gets a reference to the given int32 and assigns it to the NumExecutors field.
func (o *HudsonMasterComputer) SetNumExecutors(v int32) {
	o.NumExecutors = &v
}

// GetOffline returns the Offline field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetOffline() bool {
	if o == nil || o.Offline == nil {
		var ret bool
		return ret
	}
	return *o.Offline
}

// GetOfflineOk returns a tuple with the Offline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetOfflineOk() (*bool, bool) {
	if o == nil || o.Offline == nil {
		return nil, false
	}
	return o.Offline, true
}

// HasOffline returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasOffline() bool {
	if o != nil && o.Offline != nil {
		return true
	}

	return false
}

// SetOffline gets a reference to the given bool and assigns it to the Offline field.
func (o *HudsonMasterComputer) SetOffline(v bool) {
	o.Offline = &v
}

// GetOfflineCause returns the OfflineCause field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetOfflineCause() string {
	if o == nil || o.OfflineCause == nil {
		var ret string
		return ret
	}
	return *o.OfflineCause
}

// GetOfflineCauseOk returns a tuple with the OfflineCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetOfflineCauseOk() (*string, bool) {
	if o == nil || o.OfflineCause == nil {
		return nil, false
	}
	return o.OfflineCause, true
}

// HasOfflineCause returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasOfflineCause() bool {
	if o != nil && o.OfflineCause != nil {
		return true
	}

	return false
}

// SetOfflineCause gets a reference to the given string and assigns it to the OfflineCause field.
func (o *HudsonMasterComputer) SetOfflineCause(v string) {
	o.OfflineCause = &v
}

// GetOfflineCauseReason returns the OfflineCauseReason field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetOfflineCauseReason() string {
	if o == nil || o.OfflineCauseReason == nil {
		var ret string
		return ret
	}
	return *o.OfflineCauseReason
}

// GetOfflineCauseReasonOk returns a tuple with the OfflineCauseReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetOfflineCauseReasonOk() (*string, bool) {
	if o == nil || o.OfflineCauseReason == nil {
		return nil, false
	}
	return o.OfflineCauseReason, true
}

// HasOfflineCauseReason returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasOfflineCauseReason() bool {
	if o != nil && o.OfflineCauseReason != nil {
		return true
	}

	return false
}

// SetOfflineCauseReason gets a reference to the given string and assigns it to the OfflineCauseReason field.
func (o *HudsonMasterComputer) SetOfflineCauseReason(v string) {
	o.OfflineCauseReason = &v
}

// GetTemporarilyOffline returns the TemporarilyOffline field value if set, zero value otherwise.
func (o *HudsonMasterComputer) GetTemporarilyOffline() bool {
	if o == nil || o.TemporarilyOffline == nil {
		var ret bool
		return ret
	}
	return *o.TemporarilyOffline
}

// GetTemporarilyOfflineOk returns a tuple with the TemporarilyOffline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HudsonMasterComputer) GetTemporarilyOfflineOk() (*bool, bool) {
	if o == nil || o.TemporarilyOffline == nil {
		return nil, false
	}
	return o.TemporarilyOffline, true
}

// HasTemporarilyOffline returns a boolean if a field has been set.
func (o *HudsonMasterComputer) HasTemporarilyOffline() bool {
	if o != nil && o.TemporarilyOffline != nil {
		return true
	}

	return false
}

// SetTemporarilyOffline gets a reference to the given bool and assigns it to the TemporarilyOffline field.
func (o *HudsonMasterComputer) SetTemporarilyOffline(v bool) {
	o.TemporarilyOffline = &v
}

func (o HudsonMasterComputer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Class != nil {
		toSerialize["_class"] = o.Class
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Executors != nil {
		toSerialize["executors"] = o.Executors
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.IconClassName != nil {
		toSerialize["iconClassName"] = o.IconClassName
	}
	if o.Idle != nil {
		toSerialize["idle"] = o.Idle
	}
	if o.JnlpAgent != nil {
		toSerialize["jnlpAgent"] = o.JnlpAgent
	}
	if o.LaunchSupported != nil {
		toSerialize["launchSupported"] = o.LaunchSupported
	}
	if o.LoadStatistics != nil {
		toSerialize["loadStatistics"] = o.LoadStatistics
	}
	if o.ManualLaunchAllowed != nil {
		toSerialize["manualLaunchAllowed"] = o.ManualLaunchAllowed
	}
	if o.MonitorData != nil {
		toSerialize["monitorData"] = o.MonitorData
	}
	if o.NumExecutors != nil {
		toSerialize["numExecutors"] = o.NumExecutors
	}
	if o.Offline != nil {
		toSerialize["offline"] = o.Offline
	}
	if o.OfflineCause != nil {
		toSerialize["offlineCause"] = o.OfflineCause
	}
	if o.OfflineCauseReason != nil {
		toSerialize["offlineCauseReason"] = o.OfflineCauseReason
	}
	if o.TemporarilyOffline != nil {
		toSerialize["temporarilyOffline"] = o.TemporarilyOffline
	}
	return json.Marshal(toSerialize)
}

type NullableHudsonMasterComputer struct {
	value *HudsonMasterComputer
	isSet bool
}

func (v NullableHudsonMasterComputer) Get() *HudsonMasterComputer {
	return v.value
}

func (v *NullableHudsonMasterComputer) Set(val *HudsonMasterComputer) {
	v.value = val
	v.isSet = true
}

func (v NullableHudsonMasterComputer) IsSet() bool {
	return v.isSet
}

func (v *NullableHudsonMasterComputer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHudsonMasterComputer(val *HudsonMasterComputer) *NullableHudsonMasterComputer {
	return &NullableHudsonMasterComputer{value: val, isSet: true}
}

func (v NullableHudsonMasterComputer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHudsonMasterComputer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


