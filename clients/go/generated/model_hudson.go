/*
Swaggy Jenkins

Jenkins API clients generated from Swagger / Open API specification

API version: 1.1.1
Contact: blah@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Hudson struct for Hudson
type Hudson struct {
	Class *string `json:"_class,omitempty"`
	AssignedLabels []HudsonassignedLabels `json:"assignedLabels,omitempty"`
	Mode *string `json:"mode,omitempty"`
	NodeDescription *string `json:"nodeDescription,omitempty"`
	NodeName *string `json:"nodeName,omitempty"`
	NumExecutors *int32 `json:"numExecutors,omitempty"`
	Description *string `json:"description,omitempty"`
	Jobs []FreeStyleProject `json:"jobs,omitempty"`
	PrimaryView *AllView `json:"primaryView,omitempty"`
	QuietingDown *bool `json:"quietingDown,omitempty"`
	SlaveAgentPort *int32 `json:"slaveAgentPort,omitempty"`
	UnlabeledLoad *UnlabeledLoadStatistics `json:"unlabeledLoad,omitempty"`
	UseCrumbs *bool `json:"useCrumbs,omitempty"`
	UseSecurity *bool `json:"useSecurity,omitempty"`
	Views []AllView `json:"views,omitempty"`
}

// NewHudson instantiates a new Hudson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHudson() *Hudson {
	this := Hudson{}
	return &this
}

// NewHudsonWithDefaults instantiates a new Hudson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHudsonWithDefaults() *Hudson {
	this := Hudson{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *Hudson) GetClass() string {
	if o == nil || o.Class == nil {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetClassOk() (*string, bool) {
	if o == nil || o.Class == nil {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *Hudson) HasClass() bool {
	if o != nil && o.Class != nil {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *Hudson) SetClass(v string) {
	o.Class = &v
}

// GetAssignedLabels returns the AssignedLabels field value if set, zero value otherwise.
func (o *Hudson) GetAssignedLabels() []HudsonassignedLabels {
	if o == nil || o.AssignedLabels == nil {
		var ret []HudsonassignedLabels
		return ret
	}
	return o.AssignedLabels
}

// GetAssignedLabelsOk returns a tuple with the AssignedLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetAssignedLabelsOk() ([]HudsonassignedLabels, bool) {
	if o == nil || o.AssignedLabels == nil {
		return nil, false
	}
	return o.AssignedLabels, true
}

// HasAssignedLabels returns a boolean if a field has been set.
func (o *Hudson) HasAssignedLabels() bool {
	if o != nil && o.AssignedLabels != nil {
		return true
	}

	return false
}

// SetAssignedLabels gets a reference to the given []HudsonassignedLabels and assigns it to the AssignedLabels field.
func (o *Hudson) SetAssignedLabels(v []HudsonassignedLabels) {
	o.AssignedLabels = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *Hudson) GetMode() string {
	if o == nil || o.Mode == nil {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetModeOk() (*string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *Hudson) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *Hudson) SetMode(v string) {
	o.Mode = &v
}

// GetNodeDescription returns the NodeDescription field value if set, zero value otherwise.
func (o *Hudson) GetNodeDescription() string {
	if o == nil || o.NodeDescription == nil {
		var ret string
		return ret
	}
	return *o.NodeDescription
}

// GetNodeDescriptionOk returns a tuple with the NodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetNodeDescriptionOk() (*string, bool) {
	if o == nil || o.NodeDescription == nil {
		return nil, false
	}
	return o.NodeDescription, true
}

// HasNodeDescription returns a boolean if a field has been set.
func (o *Hudson) HasNodeDescription() bool {
	if o != nil && o.NodeDescription != nil {
		return true
	}

	return false
}

// SetNodeDescription gets a reference to the given string and assigns it to the NodeDescription field.
func (o *Hudson) SetNodeDescription(v string) {
	o.NodeDescription = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *Hudson) GetNodeName() string {
	if o == nil || o.NodeName == nil {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetNodeNameOk() (*string, bool) {
	if o == nil || o.NodeName == nil {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *Hudson) HasNodeName() bool {
	if o != nil && o.NodeName != nil {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *Hudson) SetNodeName(v string) {
	o.NodeName = &v
}

// GetNumExecutors returns the NumExecutors field value if set, zero value otherwise.
func (o *Hudson) GetNumExecutors() int32 {
	if o == nil || o.NumExecutors == nil {
		var ret int32
		return ret
	}
	return *o.NumExecutors
}

// GetNumExecutorsOk returns a tuple with the NumExecutors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetNumExecutorsOk() (*int32, bool) {
	if o == nil || o.NumExecutors == nil {
		return nil, false
	}
	return o.NumExecutors, true
}

// HasNumExecutors returns a boolean if a field has been set.
func (o *Hudson) HasNumExecutors() bool {
	if o != nil && o.NumExecutors != nil {
		return true
	}

	return false
}

// SetNumExecutors gets a reference to the given int32 and assigns it to the NumExecutors field.
func (o *Hudson) SetNumExecutors(v int32) {
	o.NumExecutors = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Hudson) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Hudson) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Hudson) SetDescription(v string) {
	o.Description = &v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *Hudson) GetJobs() []FreeStyleProject {
	if o == nil || o.Jobs == nil {
		var ret []FreeStyleProject
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetJobsOk() ([]FreeStyleProject, bool) {
	if o == nil || o.Jobs == nil {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *Hudson) HasJobs() bool {
	if o != nil && o.Jobs != nil {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []FreeStyleProject and assigns it to the Jobs field.
func (o *Hudson) SetJobs(v []FreeStyleProject) {
	o.Jobs = v
}

// GetPrimaryView returns the PrimaryView field value if set, zero value otherwise.
func (o *Hudson) GetPrimaryView() AllView {
	if o == nil || o.PrimaryView == nil {
		var ret AllView
		return ret
	}
	return *o.PrimaryView
}

// GetPrimaryViewOk returns a tuple with the PrimaryView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetPrimaryViewOk() (*AllView, bool) {
	if o == nil || o.PrimaryView == nil {
		return nil, false
	}
	return o.PrimaryView, true
}

// HasPrimaryView returns a boolean if a field has been set.
func (o *Hudson) HasPrimaryView() bool {
	if o != nil && o.PrimaryView != nil {
		return true
	}

	return false
}

// SetPrimaryView gets a reference to the given AllView and assigns it to the PrimaryView field.
func (o *Hudson) SetPrimaryView(v AllView) {
	o.PrimaryView = &v
}

// GetQuietingDown returns the QuietingDown field value if set, zero value otherwise.
func (o *Hudson) GetQuietingDown() bool {
	if o == nil || o.QuietingDown == nil {
		var ret bool
		return ret
	}
	return *o.QuietingDown
}

// GetQuietingDownOk returns a tuple with the QuietingDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetQuietingDownOk() (*bool, bool) {
	if o == nil || o.QuietingDown == nil {
		return nil, false
	}
	return o.QuietingDown, true
}

// HasQuietingDown returns a boolean if a field has been set.
func (o *Hudson) HasQuietingDown() bool {
	if o != nil && o.QuietingDown != nil {
		return true
	}

	return false
}

// SetQuietingDown gets a reference to the given bool and assigns it to the QuietingDown field.
func (o *Hudson) SetQuietingDown(v bool) {
	o.QuietingDown = &v
}

// GetSlaveAgentPort returns the SlaveAgentPort field value if set, zero value otherwise.
func (o *Hudson) GetSlaveAgentPort() int32 {
	if o == nil || o.SlaveAgentPort == nil {
		var ret int32
		return ret
	}
	return *o.SlaveAgentPort
}

// GetSlaveAgentPortOk returns a tuple with the SlaveAgentPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetSlaveAgentPortOk() (*int32, bool) {
	if o == nil || o.SlaveAgentPort == nil {
		return nil, false
	}
	return o.SlaveAgentPort, true
}

// HasSlaveAgentPort returns a boolean if a field has been set.
func (o *Hudson) HasSlaveAgentPort() bool {
	if o != nil && o.SlaveAgentPort != nil {
		return true
	}

	return false
}

// SetSlaveAgentPort gets a reference to the given int32 and assigns it to the SlaveAgentPort field.
func (o *Hudson) SetSlaveAgentPort(v int32) {
	o.SlaveAgentPort = &v
}

// GetUnlabeledLoad returns the UnlabeledLoad field value if set, zero value otherwise.
func (o *Hudson) GetUnlabeledLoad() UnlabeledLoadStatistics {
	if o == nil || o.UnlabeledLoad == nil {
		var ret UnlabeledLoadStatistics
		return ret
	}
	return *o.UnlabeledLoad
}

// GetUnlabeledLoadOk returns a tuple with the UnlabeledLoad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetUnlabeledLoadOk() (*UnlabeledLoadStatistics, bool) {
	if o == nil || o.UnlabeledLoad == nil {
		return nil, false
	}
	return o.UnlabeledLoad, true
}

// HasUnlabeledLoad returns a boolean if a field has been set.
func (o *Hudson) HasUnlabeledLoad() bool {
	if o != nil && o.UnlabeledLoad != nil {
		return true
	}

	return false
}

// SetUnlabeledLoad gets a reference to the given UnlabeledLoadStatistics and assigns it to the UnlabeledLoad field.
func (o *Hudson) SetUnlabeledLoad(v UnlabeledLoadStatistics) {
	o.UnlabeledLoad = &v
}

// GetUseCrumbs returns the UseCrumbs field value if set, zero value otherwise.
func (o *Hudson) GetUseCrumbs() bool {
	if o == nil || o.UseCrumbs == nil {
		var ret bool
		return ret
	}
	return *o.UseCrumbs
}

// GetUseCrumbsOk returns a tuple with the UseCrumbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetUseCrumbsOk() (*bool, bool) {
	if o == nil || o.UseCrumbs == nil {
		return nil, false
	}
	return o.UseCrumbs, true
}

// HasUseCrumbs returns a boolean if a field has been set.
func (o *Hudson) HasUseCrumbs() bool {
	if o != nil && o.UseCrumbs != nil {
		return true
	}

	return false
}

// SetUseCrumbs gets a reference to the given bool and assigns it to the UseCrumbs field.
func (o *Hudson) SetUseCrumbs(v bool) {
	o.UseCrumbs = &v
}

// GetUseSecurity returns the UseSecurity field value if set, zero value otherwise.
func (o *Hudson) GetUseSecurity() bool {
	if o == nil || o.UseSecurity == nil {
		var ret bool
		return ret
	}
	return *o.UseSecurity
}

// GetUseSecurityOk returns a tuple with the UseSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetUseSecurityOk() (*bool, bool) {
	if o == nil || o.UseSecurity == nil {
		return nil, false
	}
	return o.UseSecurity, true
}

// HasUseSecurity returns a boolean if a field has been set.
func (o *Hudson) HasUseSecurity() bool {
	if o != nil && o.UseSecurity != nil {
		return true
	}

	return false
}

// SetUseSecurity gets a reference to the given bool and assigns it to the UseSecurity field.
func (o *Hudson) SetUseSecurity(v bool) {
	o.UseSecurity = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *Hudson) GetViews() []AllView {
	if o == nil || o.Views == nil {
		var ret []AllView
		return ret
	}
	return o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hudson) GetViewsOk() ([]AllView, bool) {
	if o == nil || o.Views == nil {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *Hudson) HasViews() bool {
	if o != nil && o.Views != nil {
		return true
	}

	return false
}

// SetViews gets a reference to the given []AllView and assigns it to the Views field.
func (o *Hudson) SetViews(v []AllView) {
	o.Views = v
}

func (o Hudson) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Class != nil {
		toSerialize["_class"] = o.Class
	}
	if o.AssignedLabels != nil {
		toSerialize["assignedLabels"] = o.AssignedLabels
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.NodeDescription != nil {
		toSerialize["nodeDescription"] = o.NodeDescription
	}
	if o.NodeName != nil {
		toSerialize["nodeName"] = o.NodeName
	}
	if o.NumExecutors != nil {
		toSerialize["numExecutors"] = o.NumExecutors
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Jobs != nil {
		toSerialize["jobs"] = o.Jobs
	}
	if o.PrimaryView != nil {
		toSerialize["primaryView"] = o.PrimaryView
	}
	if o.QuietingDown != nil {
		toSerialize["quietingDown"] = o.QuietingDown
	}
	if o.SlaveAgentPort != nil {
		toSerialize["slaveAgentPort"] = o.SlaveAgentPort
	}
	if o.UnlabeledLoad != nil {
		toSerialize["unlabeledLoad"] = o.UnlabeledLoad
	}
	if o.UseCrumbs != nil {
		toSerialize["useCrumbs"] = o.UseCrumbs
	}
	if o.UseSecurity != nil {
		toSerialize["useSecurity"] = o.UseSecurity
	}
	if o.Views != nil {
		toSerialize["views"] = o.Views
	}
	return json.Marshal(toSerialize)
}

type NullableHudson struct {
	value *Hudson
	isSet bool
}

func (v NullableHudson) Get() *Hudson {
	return v.value
}

func (v *NullableHudson) Set(val *Hudson) {
	v.value = val
	v.isSet = true
}

func (v NullableHudson) IsSet() bool {
	return v.isSet
}

func (v *NullableHudson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHudson(val *Hudson) *NullableHudson {
	return &NullableHudson{value: val, isSet: true}
}

func (v NullableHudson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHudson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


